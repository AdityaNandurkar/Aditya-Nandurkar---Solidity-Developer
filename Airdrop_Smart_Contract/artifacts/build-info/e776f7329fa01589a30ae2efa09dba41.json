{
	"id": "e776f7329fa01589a30ae2efa09dba41",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"AirdropSmartContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.5.17;\n\nimport \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\";\nimport \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\";\n\ncontract TokenAirdrop {\n    address public owner;\n    IERC20 public token;\n    uint256 public airdropAmount;\n    uint256 public multiplier;\n\n    event Airdrop(address indexed recipient, uint256 amount);\n    event AirdropModified(uint256 oldAmount, uint256 newAmount);\n\n    constructor(IERC20 _token, uint256 _airdropAmount, uint256 _multiplier) public {\n        owner = msg.sender;\n        token = _token;\n        airdropAmount = _airdropAmount;\n        multiplier = _multiplier;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Caller is not the owner\");\n        _;\n    }\n\n    function airdrop(\n        address source,\n        address[] memory dests,\n        uint256[] memory values\n    ) public onlyOwner {\n        require(dests.length == values.length, \"Mismatched array lengths\");\n\n        uint256 totalAmount = 0;\n\n        for (uint256 i = 0; i < dests.length; i++) {\n            require(!Address.isContract(dests[i]), \"Recipient is a contract\");\n\n            // Use safeTransferFrom from OpenZeppelin to handle potential transfer errors\n            bool success = token.transferFrom(source, dests[i], values[i] * multiplier);\n            require(success, \"Token transfer failed\");\n\n            totalAmount += values[i] * multiplier;\n            emit Airdrop(dests[i], values[i] * multiplier);\n        }\n\n        require(\n            token.balanceOf(address(this)) >= totalAmount,\n            \"Insufficient token balance\"\n        );\n    }\n\n    function withdrawTokens(uint256 _amount) external onlyOwner {\n        require(\n            _amount <= token.balanceOf(address(this)),\n            \"Insufficient token balance\"\n        );\n        token.transfer(owner, _amount);\n    }\n}\n"
			},
			"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.2;\n\n/**\n * Utility library of inline functions on addresses\n */\nlibrary Address {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"../token/ERC20/ERC20.sol\";\nimport \"../token/ERC20/ERC20Detailed.sol\";\n\n/**\n * @title SimpleToken\n * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `ERC20` functions.\n */\ncontract SimpleToken is ERC20, ERC20Detailed {\n    uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 10000 * (10 ** uint256(DECIMALS));\n\n    /**\n     * @dev Constructor that gives msg.sender all of existing tokens.\n     */\n    constructor () public ERC20Detailed(\"SimpleToken\", \"SIM\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the `IERC20` interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using `_mint`.\n * For a generic mechanism see `ERC20Mintable`.\n *\n * *For a detailed writeup see our guide [How to implement supply\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See `IERC20.approve`.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IERC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IERC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IERC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IERC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of `ERC20`;\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n     /**\n     * @dev Destoys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\n     * zero by default.\n     *\n     * This value changes when `approve` or `transferFrom` are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * > Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an `Approval` event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to `approve`. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"AirdropSmartContract.sol": {
				"TokenAirdrop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_airdropAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_multiplier",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Airdrop",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "AirdropModified",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "dests",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "airdrop",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "airdropAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "multiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"AirdropSmartContract.sol\":259:1964  contract TokenAirdrop {... */\n  mstore(0x40, 0x80)\n    /* \"AirdropSmartContract.sol\":532:744  constructor(IERC20 _token, uint256 _airdropAmount, uint256 _multiplier) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"AirdropSmartContract.sol\":532:744  constructor(IERC20 _token, uint256 _airdropAmount, uint256 _multiplier) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"AirdropSmartContract.sol\":532:744  constructor(IERC20 _token, uint256 _airdropAmount, uint256 _multiplier) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"AirdropSmartContract.sol\":629:639  msg.sender */\n  caller\n    /* \"AirdropSmartContract.sol\":621:626  owner */\n  0x00\n  dup1\n    /* \"AirdropSmartContract.sol\":621:639  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AirdropSmartContract.sol\":657:663  _token */\n  dup3\n    /* \"AirdropSmartContract.sol\":649:654  token */\n  0x01\n  0x00\n    /* \"AirdropSmartContract.sol\":649:663  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AirdropSmartContract.sol\":689:703  _airdropAmount */\n  dup2\n    /* \"AirdropSmartContract.sol\":673:686  airdropAmount */\n  0x02\n    /* \"AirdropSmartContract.sol\":673:703  airdropAmount = _airdropAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AirdropSmartContract.sol\":726:737  _multiplier */\n  dup1\n    /* \"AirdropSmartContract.sol\":713:723  multiplier */\n  0x03\n    /* \"AirdropSmartContract.sol\":713:737  multiplier = _multiplier */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AirdropSmartContract.sol\":532:744  constructor(IERC20 _token, uint256 _airdropAmount, uint256 _multiplier) public {... */\n  pop\n  pop\n  pop\n    /* \"AirdropSmartContract.sol\":259:1964  contract TokenAirdrop {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AirdropSmartContract.sol\":259:1964  contract TokenAirdrop {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"AirdropSmartContract.sol\":259:1964  contract TokenAirdrop {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x025ff12f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b3ed722\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x315a095d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc2ea8a5\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_11:\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_13:\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_16:\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_9:\n      stop\n        /* \"AirdropSmartContract.sol\":372:397  uint256 public multiplier */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AirdropSmartContract.sol\":1731:1962  function withdrawTokens(uint256 _amount) external onlyOwner {... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"AirdropSmartContract.sol\":1731:1962  function withdrawTokens(uint256 _amount) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"AirdropSmartContract.sol\":287:307  address public owner */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AirdropSmartContract.sol\":313:332  IERC20 public token */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AirdropSmartContract.sol\":338:366  uint256 public airdropAmount */\n    tag_8:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n    tag_17:\n        /* \"AirdropSmartContract.sol\":803:808  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":789:808  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":789:799  msg.sender */\n      caller\n        /* \"AirdropSmartContract.sol\":789:808  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"AirdropSmartContract.sol\":781:836  require(msg.sender == owner, \"Caller is not the owner\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"AirdropSmartContract.sol\":1023:1029  values */\n      dup1\n        /* \"AirdropSmartContract.sol\":1023:1036  values.length */\n      mload\n        /* \"AirdropSmartContract.sol\":1007:1012  dests */\n      dup3\n        /* \"AirdropSmartContract.sol\":1007:1019  dests.length */\n      mload\n        /* \"AirdropSmartContract.sol\":1007:1036  dests.length == values.length */\n      eq\n        /* \"AirdropSmartContract.sol\":999:1065  require(dests.length == values.length, \"Mismatched array lengths\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d69736d617463686564206172726179206c656e677468730000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"AirdropSmartContract.sol\":1076:1095  uint256 totalAmount */\n      0x00\n        /* \"AirdropSmartContract.sol\":1098:1099  0 */\n      dup1\n        /* \"AirdropSmartContract.sol\":1076:1099  uint256 totalAmount = 0 */\n      swap1\n      pop\n        /* \"AirdropSmartContract.sol\":1115:1124  uint256 i */\n      0x00\n        /* \"AirdropSmartContract.sol\":1127:1128  0 */\n      dup1\n        /* \"AirdropSmartContract.sol\":1115:1128  uint256 i = 0 */\n      swap1\n      pop\n        /* \"AirdropSmartContract.sol\":1110:1590  for (uint256 i = 0; i < dests.length; i++) {... */\n    tag_33:\n        /* \"AirdropSmartContract.sol\":1134:1139  dests */\n      dup4\n        /* \"AirdropSmartContract.sol\":1134:1146  dests.length */\n      mload\n        /* \"AirdropSmartContract.sol\":1130:1131  i */\n      dup2\n        /* \"AirdropSmartContract.sol\":1130:1146  i < dests.length */\n      lt\n        /* \"AirdropSmartContract.sol\":1110:1590  for (uint256 i = 0; i < dests.length; i++) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"AirdropSmartContract.sol\":1176:1204  Address.isContract(dests[i]) */\n      tag_36\n        /* \"AirdropSmartContract.sol\":1195:1200  dests */\n      dup5\n        /* \"AirdropSmartContract.sol\":1201:1202  i */\n      dup3\n        /* \"AirdropSmartContract.sol\":1195:1203  dests[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"AirdropSmartContract.sol\":1176:1194  Address.isContract */\n      tag_38\n        /* \"AirdropSmartContract.sol\":1176:1204  Address.isContract(dests[i]) */\n      jump\t// in\n    tag_36:\n        /* \"AirdropSmartContract.sol\":1175:1204  !Address.isContract(dests[i]) */\n      iszero\n        /* \"AirdropSmartContract.sol\":1167:1232  require(!Address.isContract(dests[i]), \"Recipient is a contract\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x526563697069656e74206973206120636f6e7472616374000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"AirdropSmartContract.sol\":1337:1349  bool success */\n      0x00\n        /* \"AirdropSmartContract.sol\":1352:1357  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":1352:1370  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"AirdropSmartContract.sol\":1371:1377  source */\n      dup8\n        /* \"AirdropSmartContract.sol\":1379:1384  dests */\n      dup8\n        /* \"AirdropSmartContract.sol\":1385:1386  i */\n      dup6\n        /* \"AirdropSmartContract.sol\":1379:1387  dests[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"AirdropSmartContract.sol\":1401:1411  multiplier */\n      sload(0x03)\n        /* \"AirdropSmartContract.sol\":1389:1395  values */\n      dup9\n        /* \"AirdropSmartContract.sol\":1396:1397  i */\n      dup8\n        /* \"AirdropSmartContract.sol\":1389:1398  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"AirdropSmartContract.sol\":1389:1411  values[i] * multiplier */\n      mul\n        /* \"AirdropSmartContract.sol\":1352:1412  token.transferFrom(source, dests[i], values[i] * multiplier) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"AirdropSmartContract.sol\":1352:1412  token.transferFrom(source, dests[i], values[i] * multiplier) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"AirdropSmartContract.sol\":1352:1412  token.transferFrom(source, dests[i], values[i] * multiplier) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"AirdropSmartContract.sol\":1352:1412  token.transferFrom(source, dests[i], values[i] * multiplier) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"AirdropSmartContract.sol\":1337:1412  bool success = token.transferFrom(source, dests[i], values[i] * multiplier) */\n      swap1\n      pop\n        /* \"AirdropSmartContract.sol\":1434:1441  success */\n      dup1\n        /* \"AirdropSmartContract.sol\":1426:1467  require(success, \"Token transfer failed\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"AirdropSmartContract.sol\":1509:1519  multiplier */\n      sload(0x03)\n        /* \"AirdropSmartContract.sol\":1497:1503  values */\n      dup5\n        /* \"AirdropSmartContract.sol\":1504:1505  i */\n      dup4\n        /* \"AirdropSmartContract.sol\":1497:1506  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_46\n      jumpi\n      invalid\n    tag_46:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"AirdropSmartContract.sol\":1497:1519  values[i] * multiplier */\n      mul\n        /* \"AirdropSmartContract.sol\":1482:1519  totalAmount += values[i] * multiplier */\n      dup4\n      add\n      swap3\n      pop\n        /* \"AirdropSmartContract.sol\":1546:1551  dests */\n      dup5\n        /* \"AirdropSmartContract.sol\":1552:1553  i */\n      dup3\n        /* \"AirdropSmartContract.sol\":1546:1554  dests[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"AirdropSmartContract.sol\":1538:1579  Airdrop(dests[i], values[i] * multiplier) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c32c568416fcf97be35ce5b27844cfddcd63a67a1a602c3595ba5dac38f303a\n        /* \"AirdropSmartContract.sol\":1568:1578  multiplier */\n      sload(0x03)\n        /* \"AirdropSmartContract.sol\":1556:1562  values */\n      dup7\n        /* \"AirdropSmartContract.sol\":1563:1564  i */\n      dup6\n        /* \"AirdropSmartContract.sol\":1556:1565  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"AirdropSmartContract.sol\":1556:1578  values[i] * multiplier */\n      mul\n        /* \"AirdropSmartContract.sol\":1538:1579  Airdrop(dests[i], values[i] * multiplier) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"AirdropSmartContract.sol\":1110:1590  for (uint256 i = 0; i < dests.length; i++) {... */\n      pop\n        /* \"AirdropSmartContract.sol\":1148:1151  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"AirdropSmartContract.sol\":1110:1590  for (uint256 i = 0; i < dests.length; i++) {... */\n      jump(tag_33)\n    tag_34:\n      pop\n        /* \"AirdropSmartContract.sol\":1655:1666  totalAmount */\n      dup1\n        /* \"AirdropSmartContract.sol\":1621:1626  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":1621:1636  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"AirdropSmartContract.sol\":1645:1649  this */\n      address\n        /* \"AirdropSmartContract.sol\":1621:1651  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"AirdropSmartContract.sol\":1621:1651  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"AirdropSmartContract.sol\":1621:1651  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"AirdropSmartContract.sol\":1621:1651  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"AirdropSmartContract.sol\":1621:1666  token.balanceOf(address(this)) >= totalAmount */\n      lt\n      iszero\n        /* \"AirdropSmartContract.sol\":1600:1718  require(... */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e73756666696369656e7420746f6b656e2062616c616e6365000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"AirdropSmartContract.sol\":846:847  _ */\n      pop\n        /* \"AirdropSmartContract.sol\":860:1725  function airdrop(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AirdropSmartContract.sol\":372:397  uint256 public multiplier */\n    tag_19:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"AirdropSmartContract.sol\":1731:1962  function withdrawTokens(uint256 _amount) external onlyOwner {... */\n    tag_22:\n        /* \"AirdropSmartContract.sol\":803:808  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":789:808  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":789:799  msg.sender */\n      caller\n        /* \"AirdropSmartContract.sol\":789:808  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"AirdropSmartContract.sol\":781:836  require(msg.sender == owner, \"Caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"AirdropSmartContract.sol\":1833:1838  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":1833:1848  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"AirdropSmartContract.sol\":1857:1861  this */\n      address\n        /* \"AirdropSmartContract.sol\":1833:1863  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_56:\n        /* \"AirdropSmartContract.sol\":1833:1863  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_57:\n        /* \"AirdropSmartContract.sol\":1833:1863  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"AirdropSmartContract.sol\":1833:1863  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"AirdropSmartContract.sol\":1822:1829  _amount */\n      dup2\n        /* \"AirdropSmartContract.sol\":1822:1863  _amount <= token.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"AirdropSmartContract.sol\":1801:1915  require(... */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e73756666696369656e7420746f6b656e2062616c616e6365000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"AirdropSmartContract.sol\":1925:1930  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":1925:1939  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"AirdropSmartContract.sol\":1940:1945  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AirdropSmartContract.sol\":1947:1954  _amount */\n      dup4\n        /* \"AirdropSmartContract.sol\":1925:1955  token.transfer(owner, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"AirdropSmartContract.sol\":1925:1955  token.transfer(owner, _amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"AirdropSmartContract.sol\":1925:1955  token.transfer(owner, _amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n        /* \"AirdropSmartContract.sol\":1925:1955  token.transfer(owner, _amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"AirdropSmartContract.sol\":1731:1962  function withdrawTokens(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"AirdropSmartContract.sol\":287:307  address public owner */\n    tag_24:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AirdropSmartContract.sol\":313:332  IERC20 public token */\n    tag_26:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AirdropSmartContract.sol\":338:366  uint256 public airdropAmount */\n    tag_28:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":463:1079  function isContract(address account) internal view returns (bool) {... */\n    tag_38:\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":523:527  bool */\n      0x00\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":539:551  uint256 size */\n      dup1\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":1038:1045  account */\n      dup3\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":1026:1046  extcodesize(account) */\n      extcodesize\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":1018:1046  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":1071:1072  0 */\n      0x00\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":1064:1068  size */\n      dup2\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":1064:1072  size > 0 */\n      gt\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":1057:1072  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":463:1079  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582055a3a08e2f02841965d7afb9e1b0ac13ebe01f1dbf0de9771bb925ade8e66dd664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610d10380380610d108339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160028190555080600381905550505050610c17806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063025ff12f146100675780631b3ed722146101d3578063315a095d146101f15780638da5cb5b1461021f578063fc0c546a14610269578063fc2ea8a5146102b3575b600080fd5b6101d16004803603606081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100ba57600080fd5b8201836020820111156100cc57600080fd5b803590602001918460208302840111640100000000831117156100ee57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561014e57600080fd5b82018360208201111561016057600080fd5b8035906020019184602083028401116401000000008311171561018257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506102d1565b005b6101db61085e565b6040518082815260200191505060405180910390f35b61021d6004803603602081101561020757600080fd5b8101908080359060200190929190505050610864565b005b610227610b7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610271610ba3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102bb610bc9565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b805182511461040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d69736d617463686564206172726179206c656e67746873000000000000000081525060200191505060405180910390fd5b600080905060008090505b83518110156107085761043a84828151811061042d57fe5b6020026020010151610bcf565b156104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f526563697069656e74206973206120636f6e747261637400000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd878785815181106104fa57fe5b602002602001015160035488878151811061051157fe5b6020026020010151026040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b505050506040513d60208110156105e057600080fd5b8101908080519060200190929190505050905080610666576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b60035484838151811061067557fe5b6020026020010151028301925084828151811061068e57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f8c32c568416fcf97be35ce5b27844cfddcd63a67a1a602c3595ba5dac38f303a6003548685815181106106dc57fe5b6020026020010151026040518082815260200191505060405180910390a2508080600101915050610415565b5080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156107a957600080fd5b505afa1580156107bd573d6000803e3d6000fd5b505050506040513d60208110156107d357600080fd5b81019080805190602001909291905050501015610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e73756666696369656e7420746f6b656e2062616c616e636500000000000081525060200191505060405180910390fd5b50505050565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610926576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109c557600080fd5b505afa1580156109d9573d6000803e3d6000fd5b505050506040513d60208110156109ef57600080fd5b8101908080519060200190929190505050811115610a75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e73756666696369656e7420746f6b656e2062616c616e636500000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b3f57600080fd5b505af1158015610b53573d6000803e3d6000fd5b505050506040513d6020811015610b6957600080fd5b81019080805190602001909291905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080823b90506000811191505091905056fea265627a7a7231582055a3a08e2f02841965d7afb9e1b0ac13ebe01f1dbf0de9771bb925ade8e66dd664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD10 CODESIZE SUB DUP1 PUSH2 0xD10 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0xC17 DUP1 PUSH2 0xF9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25FF12F EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1B3ED722 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xFC2EA8A5 EQ PUSH2 0x2B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH2 0x43A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x42D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xBCF JUMP JUMPDEST ISZERO PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526563697069656E74206973206120636F6E7472616374000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP8 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 SLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x511 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x675 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL DUP4 ADD SWAP3 POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x68E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C32C568416FCF97BE35CE5B27844CFDDCD63A67A1A602C3595BA5DAC38F303A PUSH1 0x3 SLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x6DC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x415 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE LOG3 LOG0 DUP15 0x2F MUL DUP5 NOT PUSH6 0xD7AFB9E1B0AC SGT 0xEB 0xE0 0x1F SAR 0xBF 0xD 0xE9 PUSH24 0x1BB925ADE8E66DD664736F6C634300051100320000000000 ",
							"sourceMap": "259:1705:0:-;;;532:212;8:9:-1;5:2;;;30:1;27;20:12;5:2;532:212:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;532:212:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:10;621:5;;:18;;;;;;;;;;;;;;;;;;657:6;649:5;;:14;;;;;;;;;;;;;;;;;;689;673:13;:30;;;;726:11;713:10;:24;;;;532:212;;;259:1705;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063025ff12f146100675780631b3ed722146101d3578063315a095d146101f15780638da5cb5b1461021f578063fc0c546a14610269578063fc2ea8a5146102b3575b600080fd5b6101d16004803603606081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100ba57600080fd5b8201836020820111156100cc57600080fd5b803590602001918460208302840111640100000000831117156100ee57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561014e57600080fd5b82018360208201111561016057600080fd5b8035906020019184602083028401116401000000008311171561018257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506102d1565b005b6101db61085e565b6040518082815260200191505060405180910390f35b61021d6004803603602081101561020757600080fd5b8101908080359060200190929190505050610864565b005b610227610b7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610271610ba3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102bb610bc9565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b805182511461040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d69736d617463686564206172726179206c656e67746873000000000000000081525060200191505060405180910390fd5b600080905060008090505b83518110156107085761043a84828151811061042d57fe5b6020026020010151610bcf565b156104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f526563697069656e74206973206120636f6e747261637400000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd878785815181106104fa57fe5b602002602001015160035488878151811061051157fe5b6020026020010151026040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b505050506040513d60208110156105e057600080fd5b8101908080519060200190929190505050905080610666576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b60035484838151811061067557fe5b6020026020010151028301925084828151811061068e57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f8c32c568416fcf97be35ce5b27844cfddcd63a67a1a602c3595ba5dac38f303a6003548685815181106106dc57fe5b6020026020010151026040518082815260200191505060405180910390a2508080600101915050610415565b5080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156107a957600080fd5b505afa1580156107bd573d6000803e3d6000fd5b505050506040513d60208110156107d357600080fd5b81019080805190602001909291905050501015610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e73756666696369656e7420746f6b656e2062616c616e636500000000000081525060200191505060405180910390fd5b50505050565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610926576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109c557600080fd5b505afa1580156109d9573d6000803e3d6000fd5b505050506040513d60208110156109ef57600080fd5b8101908080519060200190929190505050811115610a75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e73756666696369656e7420746f6b656e2062616c616e636500000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b3f57600080fd5b505af1158015610b53573d6000803e3d6000fd5b505050506040513d6020811015610b6957600080fd5b81019080805190602001909291905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080823b90506000811191505091905056fea265627a7a7231582055a3a08e2f02841965d7afb9e1b0ac13ebe01f1dbf0de9771bb925ade8e66dd664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25FF12F EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1B3ED722 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xFC2EA8A5 EQ PUSH2 0x2B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH2 0x43A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x42D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xBCF JUMP JUMPDEST ISZERO PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526563697069656E74206973206120636F6E7472616374000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP8 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 SLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x511 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x675 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL DUP4 ADD SWAP3 POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x68E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C32C568416FCF97BE35CE5B27844CFDDCD63A67A1A602C3595BA5DAC38F303A PUSH1 0x3 SLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x6DC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x415 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE LOG3 LOG0 DUP15 0x2F MUL DUP5 NOT PUSH6 0xD7AFB9E1B0AC SGT 0xEB 0xE0 0x1F SAR 0xBF 0xD 0xE9 PUSH24 0x1BB925ADE8E66DD664736F6C634300051100320000000000 ",
							"sourceMap": "259:1705:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;259:1705:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;860:865;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;860:865:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;860:865:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;860:865:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;860:865:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;860:865:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;860:865:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;860:865:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;860:865:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;860:865:0;;;;;;;;;;;;;;;:::i;:::-;;372:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1731:231;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:231:0;;;;;;;;;;;;;;;;;:::i;:::-;;287:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;313:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;338:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;860:865;803:5;;;;;;;;;;;789:19;;:10;:19;;;781:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:6;:13;1007:5;:12;:29;999:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:19;1098:1;1076:23;;1115:9;1127:1;1115:13;;1110:480;1134:5;:12;1130:1;:16;1110:480;;;1176:28;1195:5;1201:1;1195:8;;;;;;;;;;;;;;1176:18;:28::i;:::-;1175:29;1167:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:12;1352:5;;;;;;;;;;;:18;;;1371:6;1379:5;1385:1;1379:8;;;;;;;;;;;;;;1401:10;;1389:6;1396:1;1389:9;;;;;;;;;;;;;;:22;1352:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1352:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1352:60:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1352:60:0;;;;;;;;;;;;;;;;1337:75;;1434:7;1426:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1509:10;;1497:6;1504:1;1497:9;;;;;;;;;;;;;;:22;1482:37;;;;1546:5;1552:1;1546:8;;;;;;;;;;;;;;1538:41;;;1568:10;;1556:6;1563:1;1556:9;;;;;;;;;;;;;;:22;1538:41;;;;;;;;;;;;;;;;;;1110:480;1148:3;;;;;;;1110:480;;;;1655:11;1621:5;;;;;;;;;;;:15;;;1645:4;1621:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1621:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1621:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1621:30:0;;;;;;;;;;;;;;;;:45;;1600:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:1;860:865;;;:::o;372:25::-;;;;:::o;1731:231::-;803:5;;;;;;;;;;;789:19;;:10;:19;;;781:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:5;;;;;;;;;;;:15;;;1857:4;1833:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1833:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1833:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1833:30:0;;;;;;;;;;;;;;;;1822:7;:41;;1801:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:5;;;;;;;;;;;:14;;;1940:5;;;;;;;;;;;1947:7;1925:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1925:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1925:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1925:30:0;;;;;;;;;;;;;;;;;1731:231;:::o;287:20::-;;;;;;;;;;;;;:::o;313:19::-;;;;;;;;;;;;;:::o;338:28::-;;;;:::o;463:616:6:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "619000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"airdrop(address,address[],uint256[])": "infinite",
								"airdropAmount()": "1093",
								"multiplier()": "1005",
								"owner()": "1097",
								"token()": "1119",
								"withdrawTokens(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 259,
									"end": 1964,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "MSTORE"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "MLOAD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "PUSHSIZE"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "CODESIZE"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SUB"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "PUSHSIZE"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP4"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "CODECOPY"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP2"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP2"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "ADD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP2"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "ADD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "MLOAD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "ADD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP3"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP2"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "MLOAD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "ADD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP3"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP2"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "DUP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "MLOAD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "ADD"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP3"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP2"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "SWAP1"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "POP"
								},
								{
									"begin": 629,
									"end": 639,
									"name": "CALLER"
								},
								{
									"begin": 621,
									"end": 626,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 621,
									"end": 626,
									"name": "DUP1"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "EXP"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "DUP2"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "SLOAD"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "DUP2"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "MUL"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "NOT"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "AND"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "SWAP1"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "DUP4"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "AND"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "MUL"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "OR"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "SWAP1"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "SSTORE"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "POP"
								},
								{
									"begin": 657,
									"end": 663,
									"name": "DUP3"
								},
								{
									"begin": 649,
									"end": 654,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 649,
									"end": 654,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "EXP"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "SLOAD"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "MUL"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "NOT"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "AND"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "DUP4"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "AND"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "MUL"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "OR"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "SSTORE"
								},
								{
									"begin": 649,
									"end": 663,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 703,
									"name": "DUP2"
								},
								{
									"begin": 673,
									"end": 686,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 673,
									"end": 703,
									"name": "DUP2"
								},
								{
									"begin": 673,
									"end": 703,
									"name": "SWAP1"
								},
								{
									"begin": 673,
									"end": 703,
									"name": "SSTORE"
								},
								{
									"begin": 673,
									"end": 703,
									"name": "POP"
								},
								{
									"begin": 726,
									"end": 737,
									"name": "DUP1"
								},
								{
									"begin": 713,
									"end": 723,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "DUP2"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "SSTORE"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 744,
									"name": "POP"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "DUP1"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "CODECOPY"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 259,
									"end": 1964,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582055a3a08e2f02841965d7afb9e1b0ac13ebe01f1dbf0de9771bb925ade8e66dd664736f6c63430005110032",
									".code": [
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "MSTORE"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "POP"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "LT"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "SHR"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "25FF12F"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "1B3ED722"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "315A095D"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "FC0C546A"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "FC2EA8A5"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "JUMPDEST"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 1964,
											"name": "REVERT"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "AND"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MUL"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MLOAD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MSTORE"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP4"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MSTORE"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP4"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP4"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MUL"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MLOAD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MSTORE"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP4"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MSTORE"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP4"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "DUP4"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "STOP"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "MLOAD"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP1"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP3"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "MSTORE"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SWAP2"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "POP"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "POP"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "MLOAD"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP1"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SWAP2"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SUB"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "RETURN"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "JUMPDEST"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "DUP1"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "DUP2"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "ADD"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "SWAP1"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "DUP1"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "DUP1"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "SWAP1"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "ADD"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "SWAP1"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "SWAP3"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "SWAP2"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "SWAP1"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "POP"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "POP"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "POP"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "JUMPDEST"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "STOP"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "MLOAD"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "DUP3"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "AND"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "AND"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SWAP2"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "MLOAD"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SWAP2"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SUB"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "RETURN"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "MLOAD"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "DUP3"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "AND"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "AND"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "MSTORE"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "MLOAD"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SUB"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "RETURN"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "MLOAD"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP1"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP3"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP2"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "MSTORE"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "ADD"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP2"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "POP"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "POP"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "MLOAD"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP1"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP2"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SUB"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP1"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "RETURN"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "JUMPDEST"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DIV"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 799,
											"name": "CALLER"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "EQ"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "JUMPI"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MLOAD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP3"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SUB"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP3"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SWAP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MLOAD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SWAP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SUB"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SWAP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "REVERT"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "DUP1"
										},
										{
											"begin": 1023,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 1007,
											"end": 1019,
											"name": "MLOAD"
										},
										{
											"begin": 1007,
											"end": 1036,
											"name": "EQ"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "JUMPI"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MLOAD"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP2"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MSTORE"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "ADD"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "ADD"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP3"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP2"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "SUB"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP3"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MSTORE"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP2"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MSTORE"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "ADD"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "4D69736D617463686564206172726179206C656E677468730000000000000000"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP2"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MSTORE"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "ADD"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "SWAP2"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MLOAD"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "SWAP2"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "SUB"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "REVERT"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "JUMPDEST"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 1076,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 1076,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 1115,
											"end": 1124,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1128,
											"name": "DUP1"
										},
										{
											"begin": 1115,
											"end": 1128,
											"name": "SWAP1"
										},
										{
											"begin": 1115,
											"end": 1128,
											"name": "POP"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "JUMPDEST"
										},
										{
											"begin": 1134,
											"end": 1139,
											"name": "DUP4"
										},
										{
											"begin": 1134,
											"end": 1146,
											"name": "MLOAD"
										},
										{
											"begin": 1130,
											"end": 1131,
											"name": "DUP2"
										},
										{
											"begin": 1130,
											"end": 1146,
											"name": "LT"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "ISZERO"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "JUMPI"
										},
										{
											"begin": 1176,
											"end": 1204,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1195,
											"end": 1200,
											"name": "DUP5"
										},
										{
											"begin": 1201,
											"end": 1202,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "LT"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "JUMPI"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "INVALID"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "JUMPDEST"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "MUL"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1203,
											"name": "MLOAD"
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1176,
											"end": 1204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1204,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1204,
											"name": "JUMPDEST"
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "ISZERO"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "JUMPI"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "526563697069656E74206973206120636F6E7472616374000000000000000000"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "REVERT"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1167,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "SLOAD"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "EXP"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "DIV"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "DUP8"
										},
										{
											"begin": 1379,
											"end": 1384,
											"name": "DUP8"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP6"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "MLOAD"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "LT"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "JUMPI"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "INVALID"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "JUMPDEST"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "MUL"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "MLOAD"
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "SLOAD"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP9"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP8"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP2"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "MLOAD"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP2"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "LT"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "JUMPI"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "INVALID"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "JUMPDEST"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "MUL"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "ADD"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "ADD"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "MLOAD"
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "MUL"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP5"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SHL"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MSTORE"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP5"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MSTORE"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP4"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MSTORE"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP3"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MSTORE"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SWAP4"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP4"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SUB"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP8"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "GAS"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "CALL"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SWAP3"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SWAP2"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1412,
											"name": "SWAP1"
										},
										{
											"begin": 1337,
											"end": 1412,
											"name": "POP"
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "JUMPI"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MLOAD"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP3"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "SUB"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP3"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "SWAP2"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MLOAD"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "SWAP2"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "SUB"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "SWAP1"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "REVERT"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "JUMPDEST"
										},
										{
											"begin": 1509,
											"end": 1519,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1509,
											"end": 1519,
											"name": "SLOAD"
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "DUP5"
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "DUP4"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP2"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "MLOAD"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP2"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "LT"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "JUMPI"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "INVALID"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "JUMPDEST"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "MUL"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "ADD"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "ADD"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "MLOAD"
										},
										{
											"begin": 1497,
											"end": 1519,
											"name": "MUL"
										},
										{
											"begin": 1482,
											"end": 1519,
											"name": "DUP4"
										},
										{
											"begin": 1482,
											"end": 1519,
											"name": "ADD"
										},
										{
											"begin": 1482,
											"end": 1519,
											"name": "SWAP3"
										},
										{
											"begin": 1482,
											"end": 1519,
											"name": "POP"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "DUP5"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP3"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "DUP2"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "MLOAD"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "DUP2"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "LT"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "JUMPI"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "INVALID"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "MUL"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "ADD"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "ADD"
										},
										{
											"begin": 1546,
											"end": 1554,
											"name": "MLOAD"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "AND"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "PUSH",
											"value": "8C32C568416FCF97BE35CE5B27844CFDDCD63A67A1A602C3595BA5DAC38F303A"
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "SLOAD"
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP7"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP6"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP2"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "MLOAD"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP2"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "LT"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "JUMPI"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "INVALID"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "JUMPDEST"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "MUL"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "ADD"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "ADD"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "MLOAD"
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "MUL"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "MLOAD"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "DUP1"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "DUP3"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "DUP2"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "MSTORE"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "ADD"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "SWAP2"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "POP"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "POP"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "MLOAD"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "DUP1"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "SWAP2"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "SUB"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "SWAP1"
										},
										{
											"begin": 1538,
											"end": 1579,
											"name": "LOG2"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "POP"
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "DUP1"
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "DUP1"
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "ADD"
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "SWAP2"
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "POP"
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "POP"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "JUMP"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "JUMPDEST"
										},
										{
											"begin": 1110,
											"end": 1590,
											"name": "POP"
										},
										{
											"begin": 1655,
											"end": 1666,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "SLOAD"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "EXP"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "DIV"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "AND"
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "AND"
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1645,
											"end": 1649,
											"name": "ADDRESS"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "MLOAD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP3"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "AND"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SHL"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP2"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "MSTORE"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "ADD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP3"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "AND"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "AND"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP2"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "MSTORE"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "ADD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SWAP2"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "MLOAD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP4"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SUB"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP2"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP7"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "GAS"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "STATICCALL"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "MLOAD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP2"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "ADD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "MLOAD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "ADD"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SWAP3"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SWAP2"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1666,
											"name": "LT"
										},
										{
											"begin": 1621,
											"end": 1666,
											"name": "ISZERO"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "JUMPI"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "MLOAD"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP2"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP3"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP2"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "SUB"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP3"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP2"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "496E73756666696369656E7420746F6B656E2062616C616E6365000000000000"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP2"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "SWAP2"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "MLOAD"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "SWAP2"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "SUB"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "REVERT"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1600,
											"end": 1718,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 1725,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SLOAD"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "JUMPDEST"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DIV"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 799,
											"name": "CALLER"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "EQ"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "JUMPI"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MLOAD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP3"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SUB"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP3"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SWAP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "MLOAD"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SWAP2"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SUB"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "SWAP1"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "REVERT"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 781,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "SWAP1"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "SLOAD"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "SWAP1"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "EXP"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "SWAP1"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "DIV"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "AND"
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "AND"
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "ADDRESS"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MLOAD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP3"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "AND"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SHL"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP2"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MSTORE"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ADD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP3"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "AND"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "AND"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP2"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MSTORE"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ADD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP2"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MLOAD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP4"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SUB"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP2"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP7"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "GAS"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "STATICCALL"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MLOAD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP2"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ADD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MLOAD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ADD"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP3"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP2"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1822,
											"end": 1829,
											"name": "DUP2"
										},
										{
											"begin": 1822,
											"end": 1863,
											"name": "GT"
										},
										{
											"begin": 1822,
											"end": 1863,
											"name": "ISZERO"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "JUMPI"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "MLOAD"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP2"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "MSTORE"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "ADD"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP1"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP1"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "ADD"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP3"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP2"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "SUB"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP3"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "MSTORE"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP2"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "MSTORE"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "ADD"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP1"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "496E73756666696369656E7420746F6B656E2062616C616E6365000000000000"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP2"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "MSTORE"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "POP"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "ADD"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "SWAP2"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "POP"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "POP"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "MLOAD"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "DUP1"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "SWAP2"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "SUB"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "SWAP1"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "REVERT"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1801,
											"end": 1915,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "SLOAD"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "EXP"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DIV"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP1"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "SWAP1"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "SLOAD"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "SWAP1"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "EXP"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "SWAP1"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DIV"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "AND"
										},
										{
											"begin": 1947,
											"end": 1954,
											"name": "DUP4"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MLOAD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP4"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SHL"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP4"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP3"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SWAP3"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MLOAD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP4"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SUB"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP8"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "GAS"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "CALL"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MLOAD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MLOAD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SWAP3"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SWAP2"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "POP"
										},
										{
											"begin": 1731,
											"end": 1962,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SLOAD"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "EXP"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "DIV"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "AND"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 287,
											"end": 307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SLOAD"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "EXP"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "DIV"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "AND"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 332,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SLOAD"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP2"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "JUMPDEST"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 539,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "DUP3"
										},
										{
											"begin": 1026,
											"end": 1046,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "POP"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "GT"
										},
										{
											"begin": 1057,
											"end": 1072,
											"name": "SWAP2"
										},
										{
											"begin": 1057,
											"end": 1072,
											"name": "POP"
										},
										{
											"begin": 1057,
											"end": 1072,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "SWAP2"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "SWAP1"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 1079,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdrop(address,address[],uint256[])": "025ff12f",
							"airdropAmount()": "fc2ea8a5",
							"multiplier()": "1b3ed722",
							"owner()": "8da5cb5b",
							"token()": "fc0c546a",
							"withdrawTokens(uint256)": "315a095d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_airdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"AirdropModified\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"dests\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"AirdropSmartContract.sol\":\"TokenAirdrop\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"AirdropSmartContract.sol\":{\"keccak256\":\"0x6f4111f0a97845b7b0d4719cfec388a37555c44b496e784157ca38cf30d075f3\",\"urls\":[\"bzz-raw://2f0018ac773f58fe330162c93d88ccdaf7d57af9331f77ab6cdcd2f7de78f6ff\",\"dweb:/ipfs/QmYDHY8ZtGSCBgPwsSP3TrKCxULcVvwnMTEf6KCbUmV4Fa\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":{\"keccak256\":\"0xba8aae09da6b52af50f455f0b4bbedea22f51ffd64de2b57855042cbc72d5e45\",\"urls\":[\"bzz-raw://a4fb97e17db7bdc46bed95c7f0da1cd89da438d455ca954e8a7037df9ca0db27\",\"dweb:/ipfs/QmbnFXKCMvFUJQKQgDjpycGT25njXAnKDzw13ivxhTzWX6\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzz-raw://95b3b4b5c8008b6d8a862a797bf2550e8017cbff25d0e36be86cff48b1a9bbf2\",\"dweb:/ipfs/QmZWK9sD6V3jwSarEyheM8PjHFVcuA11W65FgAZ2fsu9sq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "AirdropSmartContract.sol:TokenAirdrop",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "AirdropSmartContract.sol:TokenAirdrop",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)886"
							},
							{
								"astId": 9,
								"contract": "AirdropSmartContract.sol:TokenAirdrop",
								"label": "airdropAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "AirdropSmartContract.sol:TokenAirdrop",
								"label": "multiplier",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)886": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20": {
				"SimpleToken": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.",
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"constructor": {
								"details": "Constructor that gives msg.sender all of existing tokens."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						},
						"title": "SimpleToken"
					},
					"evm": {
						"assembly": "    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":334:713  contract SimpleToken is ERC20, ERC20Detailed {... */\n  mstore(0x40, 0x80)\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":593:711  constructor () public ERC20Detailed(\"SimpleToken\", \"SIM\", DECIMALS) {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":593:711  constructor () public ERC20Detailed(\"SimpleToken\", \"SIM\", DECIMALS) {... */\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":416:579  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x53696d706c65546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x53494d0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":418:420  18 */\n  0x12\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":512:516  name */\n  dup3\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":504:509  _name */\n  0x03\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":504:516  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":536:542  symbol */\n  dup2\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":526:533  _symbol */\n  0x04\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":526:542  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":564:572  decimals */\n  dup1\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":552:561  _decimals */\n  0x05\n  0x00\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":552:572  _decimals = decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":416:579  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  pop\n  pop\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":671:704  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_9\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":677:687  msg.sender */\n  caller\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":418:420  18 */\n  0x12\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":482:499  uint256(DECIMALS) */\n  0xff\n  and\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":476:478  10 */\n  0x0a\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":476:499  10 ** uint256(DECIMALS) */\n  exp\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":467:472  10000 */\n  0x2710\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":467:500  10000 * (10 ** uint256(DECIMALS)) */\n  mul\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":671:676  _mint */\n  shl(0x20, tag_10)\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":671:704  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":334:713  contract SimpleToken is ERC20, ERC20Detailed {... */\n  jump(tag_11)\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5771:6073  function _mint(address account, uint256 amount) internal {... */\ntag_10:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5865:5866  0 */\n  0x00\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5846:5867  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5846:5853  account */\n  dup3\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5846:5867  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5838:5903  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5929:5953  _totalSupply.add(amount) */\n  tag_14\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5946:5952  amount */\n  dup2\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5929:5941  _totalSupply */\n  sload(0x02)\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5929:5945  _totalSupply.add */\n  or(tag_0_77, shl(0x20, tag_15))\n  swap1\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5929:5953  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5914:5926  _totalSupply */\n  0x02\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5914:5953  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5984:6014  _balances[account].add(amount) */\n  tag_16\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":6007:6013  amount */\n  dup2\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5984:5993  _balances */\n  0x00\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5984:6002  _balances[account] */\n  dup1\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5994:6001  account */\n  dup6\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5984:6002  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5984:6006  _balances[account].add */\n  or(tag_0_77, shl(0x20, tag_15))\n  swap1\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5984:6014  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5963:5972  _balances */\n  0x00\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5963:5981  _balances[account] */\n  dup1\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5973:5980  account */\n  dup5\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5963:5981  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5963:6014  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":6050:6057  account */\n  dup2\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":6029:6066  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":6046:6047  0 */\n  0x00\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":6029:6066  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":6059:6065  amount */\n  dup4\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":6029:6066  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5771:6073  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_15:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n  0x00\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n  dup1\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":927:928  b */\n  dup3\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":923:924  a */\n  dup5\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":923:928  a + b */\n  add\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n  swap1\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":951:952  a */\n  dup4\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":946:947  c */\n  dup2\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n  lt\n  iszero\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1002:1003  c */\n  dup1\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":995:1003  return c */\n  swap2\n  pop\n  pop\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":334:713  contract SimpleToken is ERC20, ERC20Detailed {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_20\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_20:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_21:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_21)\ntag_22:\ntag_19:\n  pop\n  swap1\n  pop\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n  swap1\n  jump\t// out\ntag_24:\n  tag_25\n  swap2\n  swap1\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_26)\ntag_27:\n  pop\n  swap1\n  jump\ntag_25:\n  swap1\n  jump\t// out\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":334:713  contract SimpleToken is ERC20, ERC20Detailed {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":334:713  contract SimpleToken is ERC20, ERC20Detailed {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e0f2625\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":385:420  uint8 public constant DECIMALS = 18 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":426:500  uint256 public constant INITIAL_SUPPLY = 10000 * (10 ** uint256(DECIMALS)) */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":1478:1559  function decimals() public view returns (uint8) {... */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n    tag_19:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":681:694  string memory */\n      0x60\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":713:718  _name */\n      0x03\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":706:718  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_60\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_61\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_60)\n    tag_61:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_62:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_62\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":644:725  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_26:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2518:2522  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      tag_64\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2543:2553  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2555:2562  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2564:2569  value */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2534:2542  _approve */\n      tag_65\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_64:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2587:2591  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2580:2591  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_28:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1558:1565  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1584:1596  _totalSupply */\n      sload(0x02)\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1577:1596  return _totalSupply */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3144:3148  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      tag_68\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3170:3176  sender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3178:3187  recipient */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3189:3195  amount */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3160:3169  _transfer */\n      tag_69\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_68:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_70\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3215:3221  sender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3223:3233  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      tag_71\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3271:3277  amount */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3246  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3247:3253  sender */\n      dup11\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3270  _allowances[sender][msg.sender].sub */\n      tag_72\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3206:3214  _approve */\n      tag_65\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_70:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3296:3300  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3289:3300  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":385:420  uint8 public constant DECIMALS = 18 */\n    tag_33:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":418:420  18 */\n      0x12\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":385:420  uint8 public constant DECIMALS = 18 */\n      dup2\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":426:500  uint256 public constant INITIAL_SUPPLY = 10000 * (10 ** uint256(DECIMALS)) */\n    tag_35:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":418:420  18 */\n      0x12\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":482:499  uint256(DECIMALS) */\n      0xff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":476:478  10 */\n      0x0a\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":476:499  10 ** uint256(DECIMALS) */\n      exp\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":467:472  10000 */\n      0x2710\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":467:500  10000 * (10 ** uint256(DECIMALS)) */\n      mul\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":426:500  uint256 public constant INITIAL_SUPPLY = 10000 * (10 ** uint256(DECIMALS)) */\n      dup2\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":1478:1559  function decimals() public view returns (uint8) {... */\n    tag_37:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":1519:1524  uint8 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":1543:1552  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":1536:1552  return _decimals */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":1478:1559  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_40:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3782:3786  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_75\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3807:3817  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3819:3826  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      tag_76\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3865:3875  addedValue */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3839  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3840:3850  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3852:3859  spender */\n      dup10\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3864  _allowances[msg.sender][spender].add */\n      tag_77\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3798:3806  _approve */\n      tag_65\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_75:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3894:3898  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3887:3898  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_43:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1718:1725  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1744:1753  _balances */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1754:1761  account */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1737:1762  return _balances[account] */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n    tag_45:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":877:890  string memory */\n      0x60\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":909:916  _symbol */\n      0x04\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":902:916  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_81\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_80)\n    tag_81:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_82:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_82\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":838:923  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_52:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4477:4481  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_84\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4502:4512  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4514:4521  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_85\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4560:4575  subtractedValue */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4534  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4535:4545  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4547:4554  spender */\n      dup10\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4559  _allowances[msg.sender][spender].sub */\n      tag_72\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4493:4501  _approve */\n      tag_65\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_84:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4594:4598  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4587:4598  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_55:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2041:2045  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      tag_87\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2067:2077  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2079:2088  recipient */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2090:2096  amount */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2057:2066  _transfer */\n      tag_69\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_87:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2114:2118  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2107:2118  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_58:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2255:2262  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2292  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2293:2298  owner */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2300:2307  spender */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2274:2308  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_65:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7226:7227  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7209:7214  owner */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7201:7269  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7306:7307  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7287:7294  spender */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7279:7347  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7388:7393  value */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7369  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7370:7375  owner */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7377:7384  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7393  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7424:7431  spender */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7417:7422  owner */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7433:7438  value */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_69:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5194:5195  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5176:5182  sender */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5168:5238  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5277:5278  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5256:5265  recipient */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5248:5319  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      tag_95\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5372:5378  amount */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5359  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5360:5366  sender */\n      dup7\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5371  _balances[sender].sub */\n      tag_72\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5339  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5340:5346  sender */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5379  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      tag_96\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5437:5443  amount */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5421  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5422:5431  recipient */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5436  _balances[recipient].add */\n      tag_77\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5398  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5399:5408  recipient */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5444  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5476:5485  recipient */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5468:5474  sender */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5487:5493  amount */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1364:1365  a */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1359:1360  b */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n      gt\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1410:1419  uint256 c */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1426:1427  b */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1422:1423  a */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1422:1427  a - b */\n      sub\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1410:1427  uint256 c = a - b */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1445:1446  c */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1438:1446  return c */\n      swap2\n      pop\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_77:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820c66c5184060709c303b84986361029e3e08bb59b8e5f753e134f99f76407f35f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f53696d706c65546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f53494d0000000000000000000000000000000000000000000000000000000000815250601282600390805190602001906200009892919062000346565b508160049080519060200190620000b192919062000346565b5080600560006101000a81548160ff021916908360ff160217905550505050620000ed33601260ff16600a0a61271002620000f360201b60201c565b620003f5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620001b381600254620002bd60201b62000ed91790919060201c565b60028190555062000211816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002bd60201b62000ed91790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808284019050838110156200033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200038957805160ff1916838001178555620003ba565b82800160010185558215620003ba579182015b82811115620003b95782518255916020019190600101906200039c565b5b509050620003c99190620003cd565b5090565b620003f291905b80821115620003ee576000816000905550600101620003d4565b5090565b90565b61102480620004056000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b4114610385578063a457c2d714610408578063a9059cbb1461046e578063dd62ed3e146104d4576100cf565b8063313ce567146102a357806339509351146102c757806370a082311461032d576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db5780632e0f2625146102615780632ff2e9dc14610285575b600080fd5b6100dc61054c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ee565b604051808215151515815260200191505060405180910390f35b6101c5610605565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061060f565b604051808215151515815260200191505060405180910390f35b6102696106c0565b604051808260ff1660ff16815260200191505060405180910390f35b61028d6106c5565b6040518082815260200191505060405180910390f35b6102ab6106d4565b604051808260ff1660ff16815260200191505060405180910390f35b610313600480360360408110156102dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106eb565b604051808215151515815260200191505060405180910390f35b61036f6004803603602081101561034357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610790565b6040518082815260200191505060405180910390f35b61038d6107d8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103cd5780820151818401526020810190506103b2565b50505050905090810190601f1680156103fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104546004803603604081101561041e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087a565b604051808215151515815260200191505060405180910390f35b6104ba6004803603604081101561048457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061091f565b604051808215151515815260200191505060405180910390f35b610536600480360360408110156104ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610936565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b5050505050905090565b60006105fb3384846109bd565b6001905092915050565b6000600254905090565b600061061c848484610bb4565b6106b584336106b085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5090919063ffffffff16565b6109bd565b600190509392505050565b601281565b601260ff16600a0a6127100281565b6000600560009054906101000a900460ff16905090565b6000610786338461078185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ed990919063ffffffff16565b6109bd565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108705780601f1061084557610100808354040283529160200191610870565b820191906000526020600020905b81548152906001019060200180831161085357829003601f168201915b5050505050905090565b6000610915338461091085600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5090919063ffffffff16565b6109bd565b6001905092915050565b600061092c338484610bb4565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610fcc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610f856022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610fa76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610f626023913960400191505060405180910390fd5b610d11816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ed990919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ec8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820c66c5184060709c303b84986361029e3e08bb59b8e5f753e134f99f76407f35f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696D706C65546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53494D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x98 SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB1 SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0xED CALLER PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x2710 MUL PUSH3 0xF3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3F5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x197 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1B3 DUP2 PUSH1 0x2 SLOAD PUSH3 0x2BD PUSH1 0x20 SHL PUSH3 0xED9 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x211 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x2BD PUSH1 0x20 SHL PUSH3 0xED9 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x389 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3BA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3BA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3B9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x39C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x3C9 SWAP2 SWAP1 PUSH3 0x3CD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x3F2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3EE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x3D4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1024 DUP1 PUSH3 0x405 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32D JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x285 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61C DUP5 DUP5 DUP5 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x6B5 DUP5 CALLER PUSH2 0x6B0 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE50 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x2710 MUL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x786 CALLER DUP5 PUSH2 0x781 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xED9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x870 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x845 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x870 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x853 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x915 CALLER DUP5 PUSH2 0x910 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE50 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C CALLER DUP5 DUP5 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF85 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF62 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD11 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE50 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDA4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xED9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC6 PUSH13 0x5184060709C303B84986361029 0xE3 0xE0 DUP12 0xB5 SWAP12 DUP15 0x5F PUSH22 0x3E134F99F76407F35F64736F6C634300051100320000 ",
							"sourceMap": "334:379:1:-;;;593:118;8:9:-1;5:2;;;30:1;27;20:12;5:2;593:118:1;416:163:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:2:1;512:4:4;504:5;:12;;;;;;;;;;;;:::i;:::-;;536:6;526:7;:16;;;;;;;;;;;;:::i;:::-;;564:8;552:9;;:20;;;;;;;;;;;;;;;;;;416:163;;;671:33:1;677:10;418:2;482:17;;476:2;:23;467:5;:33;671:5;;;:33;;:::i;:::-;334:379;;5771:302:3;5865:1;5846:21;;:7;:21;;;;5838:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:24;5946:6;5929:12;;:16;;;;;;:24;;;;:::i;:::-;5914:12;:39;;;;5984:30;6007:6;5984:9;:18;5994:7;5984:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;5963:9;:18;5973:7;5963:18;;;;;;;;;;;;;;;:51;;;;6050:7;6029:37;;6046:1;6029:37;;;6059:6;6029:37;;;;;;;;;;;;;;;;;;5771:302;;:::o;834:176:2:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;334:379:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b4114610385578063a457c2d714610408578063a9059cbb1461046e578063dd62ed3e146104d4576100cf565b8063313ce567146102a357806339509351146102c757806370a082311461032d576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db5780632e0f2625146102615780632ff2e9dc14610285575b600080fd5b6100dc61054c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ee565b604051808215151515815260200191505060405180910390f35b6101c5610605565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061060f565b604051808215151515815260200191505060405180910390f35b6102696106c0565b604051808260ff1660ff16815260200191505060405180910390f35b61028d6106c5565b6040518082815260200191505060405180910390f35b6102ab6106d4565b604051808260ff1660ff16815260200191505060405180910390f35b610313600480360360408110156102dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106eb565b604051808215151515815260200191505060405180910390f35b61036f6004803603602081101561034357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610790565b6040518082815260200191505060405180910390f35b61038d6107d8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103cd5780820151818401526020810190506103b2565b50505050905090810190601f1680156103fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104546004803603604081101561041e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087a565b604051808215151515815260200191505060405180910390f35b6104ba6004803603604081101561048457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061091f565b604051808215151515815260200191505060405180910390f35b610536600480360360408110156104ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610936565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b5050505050905090565b60006105fb3384846109bd565b6001905092915050565b6000600254905090565b600061061c848484610bb4565b6106b584336106b085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5090919063ffffffff16565b6109bd565b600190509392505050565b601281565b601260ff16600a0a6127100281565b6000600560009054906101000a900460ff16905090565b6000610786338461078185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ed990919063ffffffff16565b6109bd565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108705780601f1061084557610100808354040283529160200191610870565b820191906000526020600020905b81548152906001019060200180831161085357829003601f168201915b5050505050905090565b6000610915338461091085600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5090919063ffffffff16565b6109bd565b6001905092915050565b600061092c338484610bb4565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610fcc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610f856022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610fa76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610f626023913960400191505060405180910390fd5b610d11816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ed990919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ec8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820c66c5184060709c303b84986361029e3e08bb59b8e5f753e134f99f76407f35f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32D JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x285 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 DUP5 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61C DUP5 DUP5 DUP5 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x6B5 DUP5 CALLER PUSH2 0x6B0 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE50 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x2710 MUL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x786 CALLER DUP5 PUSH2 0x781 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xED9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x870 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x845 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x870 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x853 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x915 CALLER DUP5 PUSH2 0x910 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE50 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C CALLER DUP5 DUP5 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF85 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF62 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD11 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE50 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDA4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xED9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC6 PUSH13 0x5184060709C303B84986361029 0xE3 0xE0 DUP12 0xB5 SWAP12 DUP15 0x5F PUSH22 0x3E134F99F76407F35F64736F6C634300051100320000 ",
							"sourceMap": "334:379:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:379:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2453:145:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1514:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3055:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3055:252:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;385:35:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;426:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1478:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3702:203:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3702:203:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1661:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1661:108:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;838:85:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;838:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4392:213:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4392:213:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1972:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1972:153:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2183:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2183:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;644:81:4;681:13;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2453:145:3:-;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;2587:4;2580:11;;2453:145;;;;:::o;1514:89::-;1558:7;1584:12;;1577:19;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;3206:73;3215:6;3223:10;3235:43;3271:6;3235:11;:19;3247:6;3235:19;;;;;;;;;;;;;;;:31;3255:10;3235:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3206:8;:73::i;:::-;3296:4;3289:11;;3055:252;;;;;:::o;385:35:1:-;418:2;385:35;:::o;426:74::-;418:2;482:17;;476:2;:23;467:5;:33;426:74;:::o;1478:81:4:-;1519:5;1543:9;;;;;;;;;;;1536:16;;1478:81;:::o;3702:203:3:-;3782:4;3798:79;3807:10;3819:7;3828:48;3865:10;3828:11;:23;3840:10;3828:23;;;;;;;;;;;;;;;:32;3852:7;3828:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3798:8;:79::i;:::-;3894:4;3887:11;;3702:203;;;;:::o;1661:108::-;1718:7;1744:9;:18;1754:7;1744:18;;;;;;;;;;;;;;;;1737:25;;1661:108;;;:::o;838:85:4:-;877:13;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:85;:::o;4392:213:3:-;4477:4;4493:84;4502:10;4514:7;4523:53;4560:15;4523:11;:23;4535:10;4523:23;;;;;;;;;;;;;;;:32;4547:7;4523:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4493:8;:84::i;:::-;4594:4;4587:11;;4392:213;;;;:::o;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;:::-;2114:4;2107:11;;1972:153;;;;:::o;2183:132::-;2255:7;2281:11;:18;2293:5;2281:18;;;;;;;;;;;;;;;:27;2300:7;2281:27;;;;;;;;;;;;;;;;2274:34;;2183:132;;;;:::o;7117:329::-;7226:1;7209:19;;:5;:19;;;;7201:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7306:1;7287:21;;:7;:21;;;;7279:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:5;7358:11;:18;7370:5;7358:18;;;;;;;;;;;;;;;:27;7377:7;7358:27;;;;;;;;;;;;;;;:35;;;;7424:7;7408:31;;7417:5;7408:31;;;7433:5;7408:31;;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;5194:1;5176:20;;:6;:20;;;;5168:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5277:1;5256:23;;:9;:23;;;;5248:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:29;5372:6;5350:9;:17;5360:6;5350:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5330:9;:17;5340:6;5330:17;;;;;;;;;;;;;;;:49;;;;5412:32;5437:6;5412:9;:20;5422:9;5412:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5389:9;:20;5399:9;5389:20;;;;;;;;;;;;;;;:55;;;;5476:9;5459:35;;5468:6;5459:35;;;5487:6;5459:35;;;;;;;;;;;;;;;;;;5079:422;;;:::o;1274:179:2:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "826400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DECIMALS()": "306",
								"INITIAL_SUPPLY()": "393",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1263",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "MSTORE"
								},
								{
									"begin": 593,
									"end": 711,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 593,
									"end": 711,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MLOAD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "53696D706C65546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MLOAD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "ADD"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "PUSH",
									"value": "53494D0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "DUP2"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 418,
									"end": 420,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 512,
									"end": 516,
									"name": "DUP3"
								},
								{
									"begin": 504,
									"end": 509,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "DUP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "MLOAD"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "ADD"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP3"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP2"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "JUMPDEST"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "POP"
								},
								{
									"begin": 536,
									"end": 542,
									"name": "DUP2"
								},
								{
									"begin": 526,
									"end": 533,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "DUP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "MLOAD"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "ADD"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP3"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP2"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "SWAP1"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "JUMPDEST"
								},
								{
									"begin": 526,
									"end": 542,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 572,
									"name": "DUP1"
								},
								{
									"begin": 552,
									"end": 561,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 552,
									"end": 561,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "EXP"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "DUP2"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SLOAD"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "DUP2"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "MUL"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "NOT"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "AND"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SWAP1"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "DUP4"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "AND"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "MUL"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "OR"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SWAP1"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "SSTORE"
								},
								{
									"begin": 552,
									"end": 572,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 416,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 671,
									"end": 704,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 677,
									"end": 687,
									"name": "CALLER"
								},
								{
									"begin": 418,
									"end": 420,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 482,
									"end": 499,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 482,
									"end": 499,
									"name": "AND"
								},
								{
									"begin": 476,
									"end": 478,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 476,
									"end": 499,
									"name": "EXP"
								},
								{
									"begin": 467,
									"end": 472,
									"name": "PUSH",
									"value": "2710"
								},
								{
									"begin": 467,
									"end": 500,
									"name": "MUL"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "SHL"
								},
								{
									"begin": 671,
									"end": 704,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 671,
									"end": 704,
									"name": "SHR"
								},
								{
									"begin": 671,
									"end": 704,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 671,
									"end": 704,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 671,
									"end": 704,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP"
								},
								{
									"begin": 5771,
									"end": 6073,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 5771,
									"end": 6073,
									"name": "JUMPDEST"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5846,
									"end": 5867,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5846,
									"end": 5867,
									"name": "AND"
								},
								{
									"begin": 5846,
									"end": 5853,
									"name": "DUP3"
								},
								{
									"begin": 5846,
									"end": 5867,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5846,
									"end": 5867,
									"name": "AND"
								},
								{
									"begin": 5846,
									"end": 5867,
									"name": "EQ"
								},
								{
									"begin": 5846,
									"end": 5867,
									"name": "ISZERO"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "JUMPI"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "MLOAD"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP2"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "MSTORE"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "ADD"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP1"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP1"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "ADD"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP3"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP2"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "SUB"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP3"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "MSTORE"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP2"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "MSTORE"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "ADD"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP1"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP2"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "MSTORE"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "POP"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "ADD"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "SWAP2"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "POP"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "POP"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "MLOAD"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "DUP1"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "SWAP2"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "SUB"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "SWAP1"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "REVERT"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 5838,
									"end": 5903,
									"name": "JUMPDEST"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 5946,
									"end": 5952,
									"name": "DUP2"
								},
								{
									"begin": 5929,
									"end": 5941,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5929,
									"end": 5941,
									"name": "SLOAD"
								},
								{
									"begin": 5929,
									"end": 5945,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 5929,
									"end": 5945,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5929,
									"end": 5945,
									"name": "SHL"
								},
								{
									"begin": 5929,
									"end": 5945,
									"name": "PUSH [tag]",
									"value": "18446744073709551693"
								},
								{
									"begin": 5929,
									"end": 5945,
									"name": "OR"
								},
								{
									"begin": 5929,
									"end": 5945,
									"name": "SWAP1"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "SWAP2"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "SWAP1"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "SHR"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 5929,
									"end": 5953,
									"name": "JUMPDEST"
								},
								{
									"begin": 5914,
									"end": 5926,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5914,
									"end": 5953,
									"name": "DUP2"
								},
								{
									"begin": 5914,
									"end": 5953,
									"name": "SWAP1"
								},
								{
									"begin": 5914,
									"end": 5953,
									"name": "SSTORE"
								},
								{
									"begin": 5914,
									"end": 5953,
									"name": "POP"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 6007,
									"end": 6013,
									"name": "DUP2"
								},
								{
									"begin": 5984,
									"end": 5993,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "DUP1"
								},
								{
									"begin": 5994,
									"end": 6001,
									"name": "DUP6"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "AND"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "AND"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "DUP2"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "MSTORE"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "ADD"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "SWAP1"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "DUP2"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "MSTORE"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "ADD"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "KECCAK256"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "SLOAD"
								},
								{
									"begin": 5984,
									"end": 6006,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 5984,
									"end": 6006,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5984,
									"end": 6006,
									"name": "SHL"
								},
								{
									"begin": 5984,
									"end": 6006,
									"name": "PUSH [tag]",
									"value": "18446744073709551693"
								},
								{
									"begin": 5984,
									"end": 6006,
									"name": "OR"
								},
								{
									"begin": 5984,
									"end": 6006,
									"name": "SWAP1"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "SWAP2"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "SWAP1"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "SHR"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 5984,
									"end": 6014,
									"name": "JUMPDEST"
								},
								{
									"begin": 5963,
									"end": 5972,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "DUP1"
								},
								{
									"begin": 5973,
									"end": 5980,
									"name": "DUP5"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "AND"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "AND"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "DUP2"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "MSTORE"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "ADD"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "SWAP1"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "DUP2"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "MSTORE"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "ADD"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5963,
									"end": 5981,
									"name": "KECCAK256"
								},
								{
									"begin": 5963,
									"end": 6014,
									"name": "DUP2"
								},
								{
									"begin": 5963,
									"end": 6014,
									"name": "SWAP1"
								},
								{
									"begin": 5963,
									"end": 6014,
									"name": "SSTORE"
								},
								{
									"begin": 5963,
									"end": 6014,
									"name": "POP"
								},
								{
									"begin": 6050,
									"end": 6057,
									"name": "DUP2"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "AND"
								},
								{
									"begin": 6046,
									"end": 6047,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "AND"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 6059,
									"end": 6065,
									"name": "DUP4"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "MLOAD"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "DUP1"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "DUP3"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "DUP2"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "MSTORE"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "ADD"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "SWAP2"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "POP"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "POP"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "MLOAD"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "DUP1"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "SWAP2"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "SUB"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "SWAP1"
								},
								{
									"begin": 6029,
									"end": 6066,
									"name": "LOG3"
								},
								{
									"begin": 5771,
									"end": 6073,
									"name": "POP"
								},
								{
									"begin": 5771,
									"end": 6073,
									"name": "POP"
								},
								{
									"begin": 5771,
									"end": 6073,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMPDEST"
								},
								{
									"begin": 892,
									"end": 899,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 911,
									"end": 920,
									"name": "DUP1"
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3"
								},
								{
									"begin": 923,
									"end": 924,
									"name": "DUP5"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "ADD"
								},
								{
									"begin": 911,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 911,
									"end": 928,
									"name": "POP"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP4"
								},
								{
									"begin": 946,
									"end": 947,
									"name": "DUP2"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "LT"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "ISZERO"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPI"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "REVERT"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPDEST"
								},
								{
									"begin": 1002,
									"end": 1003,
									"name": "DUP1"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "SWAP2"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "POP"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP3"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP2"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SLOAD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "AND"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ISZERO"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "MUL"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SUB"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "AND"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DIV"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "MSTORE"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "KECCAK256"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DIV"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "LT"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPI"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "MLOAD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "NOT"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "AND"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP4"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "OR"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP6"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP6"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ISZERO"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPI"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "GT"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ISZERO"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPI"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "MLOAD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "POP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "POP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "POP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP3"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "GT"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ISZERO"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPI"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "POP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "POP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "CODECOPY"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 713,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c66c5184060709c303b84986361029e3e08bb59b8e5f753e134f99f76407f35f64736f6c63430005110032",
									".code": [
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "MSTORE"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "LT"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "SHR"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "GT"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "GT"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMP"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMP"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "2E0F2625"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "2FF2E9DC"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 713,
											"name": "REVERT"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "AND"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ISZERO"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP4"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "EXP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "NOT"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "AND"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP3"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "RETURN"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "AND"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MSTORE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "RETURN"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP3"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "ADD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SUB"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "RETURN"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "RETURN"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "MLOAD"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "DUP3"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "AND"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "AND"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "DUP2"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "MSTORE"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "MLOAD"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "SUB"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "RETURN"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "MLOAD"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "MLOAD"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "RETURN"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "MLOAD"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "DUP3"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "AND"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "AND"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "DUP2"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "MSTORE"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "ADD"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "SWAP2"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "MLOAD"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "SWAP2"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "SUB"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "RETURN"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "AND"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MSTORE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "RETURN"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "AND"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "RETURN"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MSTORE"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MSTORE"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "AND"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ISZERO"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPI"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP4"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "EXP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "NOT"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "AND"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MSTORE"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP3"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "RETURN"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "AND"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MSTORE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "RETURN"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "AND"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "RETURN"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MSTORE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "RETURN"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 681,
											"end": 694,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 713,
											"end": 718,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "LT"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP4"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP4"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "KECCAK256"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP4"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "GT"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 725,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "CALLER"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP5"
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "DUP5"
										},
										{
											"begin": 2534,
											"end": 2542,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMPDEST"
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "SLOAD"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "SWAP1"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP5"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP5"
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP5"
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP5"
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "DUP6"
										},
										{
											"begin": 3235,
											"end": 3246,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP11"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMPDEST"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "DUP2"
										},
										{
											"begin": 385,
											"end": 420,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 482,
											"end": 499,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 482,
											"end": 499,
											"name": "AND"
										},
										{
											"begin": 476,
											"end": 478,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 476,
											"end": 499,
											"name": "EXP"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 467,
											"end": 500,
											"name": "MUL"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "JUMPDEST"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "SLOAD"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "EXP"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DIV"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "AND"
										},
										{
											"begin": 1536,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1536,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1559,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3807,
											"end": 3817,
											"name": "CALLER"
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "DUP5"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "DUP6"
										},
										{
											"begin": 3828,
											"end": 3839,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "CALLER"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP10"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SLOAD"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP2"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMPDEST"
										},
										{
											"begin": 3798,
											"end": 3806,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1761,
											"name": "DUP4"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "KECCAK256"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SLOAD"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMPDEST"
										},
										{
											"begin": 877,
											"end": 890,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 909,
											"end": 916,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SUB"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SUB"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DIV"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MUL"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "KECCAK256"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "GT"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SUB"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 923,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4502,
											"end": 4512,
											"name": "CALLER"
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP5"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4560,
											"end": 4575,
											"name": "DUP6"
										},
										{
											"begin": 4523,
											"end": 4534,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "CALLER"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP10"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SLOAD"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP2"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 4493,
											"end": 4501,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMPDEST"
										},
										{
											"begin": 4594,
											"end": 4598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "SWAP1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2067,
											"end": 2077,
											"name": "CALLER"
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP5"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP5"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMPDEST"
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "SWAP1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP5"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "DUP4"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SLOAD"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7214,
											"name": "DUP4"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "EQ"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "ISZERO"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPI"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "CODECOPY"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "REVERT"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPDEST"
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "DUP3"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "EQ"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "ISZERO"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPI"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "CODECOPY"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "REVERT"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPDEST"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP1"
										},
										{
											"begin": 7358,
											"end": 7369,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7375,
											"name": "DUP6"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7384,
											"name": "DUP5"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SSTORE"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "POP"
										},
										{
											"begin": 7424,
											"end": 7431,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7417,
											"end": 7422,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7433,
											"end": 7438,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP3"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SUB"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "LOG3"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMPDEST"
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP4"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "EQ"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "ISZERO"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPI"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "CODECOPY"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "REVERT"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPDEST"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "EQ"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "ISZERO"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPI"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "CODECOPY"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "REVERT"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPDEST"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP1"
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "DUP7"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "KECCAK256"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SLOAD"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP2"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMPDEST"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP1"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP6"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "KECCAK256"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SSTORE"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP1"
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP6"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "KECCAK256"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SLOAD"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP1"
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP5"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "KECCAK256"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SSTORE"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP3"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MSTORE"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "ADD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SUB"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "LOG3"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "GT"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "REVERT"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP3"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SUB"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "SWAP1"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DECIMALS()": "2e0f2625",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"SimpleToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":\"SimpleToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20\":{\"keccak256\":\"0xba8aae09da6b52af50f455f0b4bbedea22f51ffd64de2b57855042cbc72d5e45\",\"urls\":[\"bzz-raw://a4fb97e17db7bdc46bed95c7f0da1cd89da438d455ca954e8a7037df9ca0db27\",\"dweb:/ipfs/QmbnFXKCMvFUJQKQgDjpycGT25njXAnKDzw13ivxhTzWX6\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 375,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20:SimpleToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 381,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20:SimpleToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 383,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20:SimpleToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 766,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20:SimpleToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 768,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20:SimpleToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 770,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20:SimpleToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":589:3527  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":589:3527  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158203204585408e29adc9624f1801382c6a844b530dbef160af6476bf87d32f9a00664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203204585408e29adc9624f1801382c6a844b530dbef160af6476bf87d32f9a00664736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ORIGIN DIV PC SLOAD ADDMOD 0xE2 SWAP11 0xDC SWAP7 0x24 CALL DUP1 SGT DUP3 0xC6 0xA8 DIFFICULTY 0xB5 ADDRESS 0xDB 0xEF AND EXP 0xF6 SELFBALANCE PUSH12 0xF87D32F9A00664736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:2938:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203204585408e29adc9624f1801382c6a844b530dbef160af6476bf87d32f9a00664736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ORIGIN DIV PC SLOAD ADDMOD 0xE2 SWAP11 0xDC SWAP7 0x24 CALL DUP1 SGT DUP3 0xC6 0xA8 DIFFICULTY 0xB5 ADDRESS 0xDB 0xEF AND EXP 0xF6 SELFBALANCE PUSH12 0xF87D32F9A00664736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:2938:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 3527,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 3527,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203204585408e29adc9624f1801382c6a844b530dbef160af6476bf87d32f9a00664736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.",
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_14:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2518:2522  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      tag_36\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2543:2553  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2555:2562  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2564:2569  value */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2534:2542  _approve */\n      tag_37\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_36:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2587:2591  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2580:2591  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_16:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1558:1565  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1584:1596  _totalSupply */\n      sload(0x02)\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1577:1596  return _totalSupply */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_19:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3144:3148  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      tag_40\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3170:3176  sender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3178:3187  recipient */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3189:3195  amount */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3160:3169  _transfer */\n      tag_41\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_40:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_42\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3215:3221  sender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3223:3233  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      tag_43\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3271:3277  amount */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3246  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3247:3253  sender */\n      dup11\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3270  _allowances[sender][msg.sender].sub */\n      tag_44\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3206:3214  _approve */\n      tag_37\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_42:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3296:3300  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3289:3300  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_22:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3782:3786  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_46\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3807:3817  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3819:3826  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      tag_47\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3865:3875  addedValue */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3839  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3840:3850  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3852:3859  spender */\n      dup10\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3864  _allowances[msg.sender][spender].add */\n      tag_48\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3798:3806  _approve */\n      tag_37\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_46:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3894:3898  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3887:3898  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_25:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1718:1725  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1744:1753  _balances */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1754:1761  account */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1737:1762  return _balances[account] */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_28:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4477:4481  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_51\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4502:4512  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4514:4521  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_52\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4560:4575  subtractedValue */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4534  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4535:4545  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4547:4554  spender */\n      dup10\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4559  _allowances[msg.sender][spender].sub */\n      tag_44\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4493:4501  _approve */\n      tag_37\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_51:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4594:4598  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4587:4598  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2041:2045  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      tag_54\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2067:2077  msg.sender */\n      caller\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2079:2088  recipient */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2090:2096  amount */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2057:2066  _transfer */\n      tag_41\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_54:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2114:2118  true */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2107:2118  return true */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_34:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2255:2262  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2292  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2293:2298  owner */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2300:2307  spender */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2274:2308  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_37:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7226:7227  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7209:7214  owner */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7201:7269  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7306:7307  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7287:7294  spender */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7279:7347  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7388:7393  value */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7369  _allowances */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7370:7375  owner */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7377:7384  spender */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7358:7393  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7424:7431  spender */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7417:7422  owner */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7433:7438  value */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_41:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5194:5195  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5176:5182  sender */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5168:5238  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5277:5278  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5256:5265  recipient */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5248:5319  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      tag_62\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5372:5378  amount */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5359  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5360:5366  sender */\n      dup7\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5371  _balances[sender].sub */\n      tag_44\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_62:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5339  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5340:5346  sender */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5330:5379  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      tag_63\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5437:5443  amount */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5421  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5422:5431  recipient */\n      dup6\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5436  _balances[recipient].add */\n      tag_48\n      swap1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5398  _balances */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5399:5408  recipient */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5389:5444  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5476:5485  recipient */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5468:5474  sender */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5487:5493  amount */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1364:1365  a */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1359:1360  b */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n      gt\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1410:1419  uint256 c */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1426:1427  b */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1422:1423  a */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1422:1427  a - b */\n      sub\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1410:1427  uint256 c = a - b */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1445:1446  c */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1438:1446  return c */\n      swap2\n      pop\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820ca1c91701f6fcea9d69f90f11da36d4255275e0579f74865c8420ed4e341ff2464736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610d02806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610caa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610c636022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610c856025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610c406023913960400191505060405180910390fd5b6109ef816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a82816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ba6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820ca1c91701f6fcea9d69f90f11da36d4255275e0579f74865c8420ed4e341ff2464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD02 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCAA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC63 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC85 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC40 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EF DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA82 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCA SHR SWAP2 PUSH17 0x1F6FCEA9D69F90F11DA36D4255275E0579 0xF7 0x48 PUSH6 0xC8420ED4E341 SELFDESTRUCT 0x24 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "1232:6578:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1232:6578:3;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610caa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610c636022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610c856025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610c406023913960400191505060405180910390fd5b6109ef816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a82816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ba6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820ca1c91701f6fcea9d69f90f11da36d4255275e0579f74865c8420ed4e341ff2464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCAA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC63 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC85 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC40 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EF DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA82 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCA SHR SWAP2 PUSH17 0x1F6FCEA9D69F90F11DA36D4255275E0579 0xF7 0x48 PUSH6 0xC8420ED4E341 SELFDESTRUCT 0x24 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "1232:6578:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1232:6578:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2453:145:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1514:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3055:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3055:252:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3702:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3702:203:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1661:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1661:108:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4392:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4392:213:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1972:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1972:153:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2183:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2183:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2453:145;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;2587:4;2580:11;;2453:145;;;;:::o;1514:89::-;1558:7;1584:12;;1577:19;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;3206:73;3215:6;3223:10;3235:43;3271:6;3235:11;:19;3247:6;3235:19;;;;;;;;;;;;;;;:31;3255:10;3235:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3206:8;:73::i;:::-;3296:4;3289:11;;3055:252;;;;;:::o;3702:203::-;3782:4;3798:79;3807:10;3819:7;3828:48;3865:10;3828:11;:23;3840:10;3828:23;;;;;;;;;;;;;;;:32;3852:7;3828:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3798:8;:79::i;:::-;3894:4;3887:11;;3702:203;;;;:::o;1661:108::-;1718:7;1744:9;:18;1754:7;1744:18;;;;;;;;;;;;;;;;1737:25;;1661:108;;;:::o;4392:213::-;4477:4;4493:84;4502:10;4514:7;4523:53;4560:15;4523:11;:23;4535:10;4523:23;;;;;;;;;;;;;;;:32;4547:7;4523:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4493:8;:84::i;:::-;4594:4;4587:11;;4392:213;;;;:::o;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;:::-;2114:4;2107:11;;1972:153;;;;:::o;2183:132::-;2255:7;2281:11;:18;2293:5;2281:18;;;;;;;;;;;;;;;:27;2300:7;2281:27;;;;;;;;;;;;;;;;2274:34;;2183:132;;;;:::o;7117:329::-;7226:1;7209:19;;:5;:19;;;;7201:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7306:1;7287:21;;:7;:21;;;;7279:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:5;7358:11;:18;7370:5;7358:18;;;;;;;;;;;;;;;:27;7377:7;7358:27;;;;;;;;;;;;;;;:35;;;;7424:7;7408:31;;7417:5;7408:31;;;7433:5;7408:31;;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;5194:1;5176:20;;:6;:20;;;;5168:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5277:1;5256:23;;:9;:23;;;;5248:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:29;5372:6;5350:9;:17;5360:6;5350:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5330:9;:17;5340:6;5330:17;;;;;;;;;;;;;;;:49;;;;5412:32;5437:6;5412:9;:20;5422:9;5412:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5389:9;:20;5399:9;5389:20;;;;;;;;;;;;;;;:55;;;;5476:9;5459:35;;5468:6;5459:35;;;5487:6;5459:35;;;;;;;;;;;;;;;;;;5079:422;;;:::o;1274:179:2:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "666000",
								"executionCost": "702",
								"totalCost": "666702"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1196",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "1036",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "MSTORE"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "POP"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "DUP1"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "CODECOPY"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820ca1c91701f6fcea9d69f90f11da36d4255275e0579f74865c8420ed4e341ff2464736f6c63430005110032",
									".code": [
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "MSTORE"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "POP"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "LT"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "SHR"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "GT"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMP"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPDEST"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPDEST"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "REVERT"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "AND"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MSTORE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "RETURN"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP3"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "ADD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SUB"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "RETURN"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "RETURN"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "AND"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MSTORE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "RETURN"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "AND"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "RETURN"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "AND"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MSTORE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "RETURN"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "AND"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "RETURN"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MSTORE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "RETURN"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "CALLER"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP5"
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "DUP5"
										},
										{
											"begin": 2534,
											"end": 2542,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMPDEST"
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "SLOAD"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "SWAP1"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP5"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP5"
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP5"
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP5"
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "DUP6"
										},
										{
											"begin": 3235,
											"end": 3246,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP11"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMPDEST"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3807,
											"end": 3817,
											"name": "CALLER"
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "DUP5"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "DUP6"
										},
										{
											"begin": 3828,
											"end": 3839,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "CALLER"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP10"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SLOAD"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP2"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMPDEST"
										},
										{
											"begin": 3798,
											"end": 3806,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1761,
											"name": "DUP4"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "KECCAK256"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SLOAD"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4502,
											"end": 4512,
											"name": "CALLER"
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP5"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4560,
											"end": 4575,
											"name": "DUP6"
										},
										{
											"begin": 4523,
											"end": 4534,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "CALLER"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP10"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SLOAD"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP2"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 4493,
											"end": 4501,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMPDEST"
										},
										{
											"begin": 4594,
											"end": 4598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "SWAP1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2067,
											"end": 2077,
											"name": "CALLER"
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP5"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP5"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMPDEST"
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "SWAP1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP5"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "DUP4"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SLOAD"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7214,
											"name": "DUP4"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "EQ"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "ISZERO"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPI"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "CODECOPY"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "REVERT"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPDEST"
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "DUP3"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "EQ"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "ISZERO"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPI"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "CODECOPY"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "REVERT"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPDEST"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP1"
										},
										{
											"begin": 7358,
											"end": 7369,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7375,
											"name": "DUP6"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7384,
											"name": "DUP5"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SSTORE"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "POP"
										},
										{
											"begin": 7424,
											"end": 7431,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7417,
											"end": 7422,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7433,
											"end": 7438,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP3"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SUB"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "LOG3"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMPDEST"
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP4"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "EQ"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "ISZERO"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPI"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "CODECOPY"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "REVERT"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPDEST"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "EQ"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "ISZERO"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPI"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "CODECOPY"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "REVERT"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPDEST"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP1"
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "DUP7"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "KECCAK256"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SLOAD"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP2"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMPDEST"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP1"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP6"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "KECCAK256"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SSTORE"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP1"
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP6"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "KECCAK256"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SLOAD"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP1"
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP5"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "KECCAK256"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SSTORE"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP3"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MSTORE"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "ADD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SUB"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "LOG3"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "GT"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "REVERT"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP3"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SUB"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "SWAP1"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 375,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 381,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 383,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 766,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 768,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 770,
								"contract": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":85:1081  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":85:1081  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158205bf872d8c18e507db8bcd31fae6557754b52db069daf41b574dc5689cc8f4b5b64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205bf872d8c18e507db8bcd31fae6557754b52db069daf41b574dc5689cc8f4b5b64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 JUMPDEST 0xF8 PUSH19 0xD8C18E507DB8BCD31FAE6557754B52DB069DAF COINBASE 0xB5 PUSH21 0xDC5689CC8F4B5B64736F6C63430005110032000000 ",
							"sourceMap": "85:996:6:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205bf872d8c18e507db8bcd31fae6557754b52db069daf41b574dc5689cc8f4b5b64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 JUMPDEST 0xF8 PUSH19 0xD8C18E507DB8BCD31FAE6557754B52DB069DAF COINBASE 0xB5 PUSH21 0xDC5689CC8F4B5B64736F6C63430005110032000000 ",
							"sourceMap": "85:996:6:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 85,
									"end": 1081,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 1081,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205bf872d8c18e507db8bcd31fae6557754b52db069daf41b574dc5689cc8f4b5b64736f6c63430005110032",
									".code": [
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "ADDRESS"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "EQ"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 85,
											"end": 1081,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Utility library of inline functions on addresses\"}},\"settings\":{\"compilationTarget\":{\"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzz-raw://95b3b4b5c8008b6d8a862a797bf2550e8017cbff25d0e36be86cff48b1a9bbf2\",\"dweb:/ipfs/QmZWK9sD6V3jwSarEyheM8PjHFVcuA11W65FgAZ2fsu9sq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {},
						"notice": "Utility library of inline functions on addresses"
					}
				}
			}
		},
		"sources": {
			"AirdropSmartContract.sol": {
				"ast": {
					"absolutePath": "AirdropSmartContract.sol",
					"exportedSymbols": {
						"TokenAirdrop": [
							192
						]
					},
					"id": 193,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20",
							"file": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 193,
							"sourceUnit": 230,
							"src": "58:107:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol",
							"file": "github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 193,
							"sourceUnit": 906,
							"src": "166:91:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 192,
							"linearizedBaseContracts": [
								192
							],
							"name": "TokenAirdrop",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 192,
									"src": "287:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 192,
									"src": "313:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$886",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 6,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 886,
										"src": "313:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$886",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "airdropAmount",
									"nodeType": "VariableDeclaration",
									"scope": 192,
									"src": "338:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "multiplier",
									"nodeType": "VariableDeclaration",
									"scope": 192,
									"src": "372:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "Airdrop",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "418:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "445:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "417:43:0"
									},
									"src": "404:57:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 23,
									"name": "AirdropModified",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"name": "oldAmount",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"name": "newAmount",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "507:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "487:38:0"
									},
									"src": "466:60:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "611:133:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 32,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "621:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 33,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "629:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "629:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "621:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "621:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 37,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "649:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$886",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "657:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$886",
															"typeString": "contract IERC20"
														}
													},
													"src": "649:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$886",
														"typeString": "contract IERC20"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "649:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 41,
														"name": "airdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "673:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 42,
														"name": "_airdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "689:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "673:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "673:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 45,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "713:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "_multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "726:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "713:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "713:24:0"
											}
										]
									},
									"documentation": null,
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "544:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$886",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 24,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 886,
													"src": "544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$886",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"name": "_airdropAmount",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "559:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"name": "_multiplier",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "583:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "543:60:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:0"
									},
									"scope": 192,
									"src": "532:212:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "771:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 53,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "789:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "789:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "803:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "789:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "810:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "781:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "781:55:0"
											},
											{
												"id": 60,
												"nodeType": "PlaceholderStatement",
												"src": "846:1:0"
											}
										]
									},
									"documentation": null,
									"id": 62,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:2:0"
									},
									"src": "750:104:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "989:736:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 76,
																	"name": "dests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "1007:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1007:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 78,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1023:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1023:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1007:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d69736d617463686564206172726179206c656e67746873",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1038:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															},
															"value": "Mismatched array lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "999:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "999:66:0"
											},
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"name": "totalAmount",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "1076:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 84,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1076:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 87,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1098:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1076:23:0"
											},
											{
												"body": {
													"id": 149,
													"nodeType": "Block",
													"src": "1153:437:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "1175:29:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 102,
																						"name": "dests",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 67,
																						"src": "1195:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 104,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 103,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 89,
																						"src": "1201:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1195:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 100,
																					"name": "Address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "1176:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Address_$905_$",
																						"typeString": "type(library Address)"
																					}
																				},
																				"id": 101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "isContract",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 904,
																				"src": "1176:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																					"typeString": "function (address) view returns (bool)"
																				}
																			},
																			"id": 105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1176:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "526563697069656e74206973206120636f6e7472616374",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1206:25:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5042fa1c858a6f7f33f2c451b0d69de560025abba9afcd09c6472303a3af23cb",
																			"typeString": "literal_string \"Recipient is a contract\""
																		},
																		"value": "Recipient is a contract"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5042fa1c858a6f7f33f2c451b0d69de560025abba9afcd09c6472303a3af23cb",
																			"typeString": "literal_string \"Recipient is a contract\""
																		}
																	],
																	"id": 99,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		923,
																		924
																	],
																	"referencedDeclaration": 924,
																	"src": "1167:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1167:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 109,
															"nodeType": "ExpressionStatement",
															"src": "1167:65:0"
														},
														{
															"assignments": [
																111
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 111,
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 149,
																	"src": "1337:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 110,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1337:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 124,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 114,
																		"name": "source",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "1371:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 115,
																			"name": "dests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "1379:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 117,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 116,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "1385:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1379:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 118,
																				"name": "values",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "1389:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 120,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 119,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 89,
																				"src": "1396:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1389:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 121,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1401:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1389:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 112,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "1352:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$886",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 869,
																	"src": "1352:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1352:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1337:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 126,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "1434:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1443:23:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																			"typeString": "literal_string \"Token transfer failed\""
																		},
																		"value": "Token transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																			"typeString": "literal_string \"Token transfer failed\""
																		}
																	],
																	"id": 125,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		923,
																		924
																	],
																	"referencedDeclaration": 924,
																	"src": "1426:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1426:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 129,
															"nodeType": "ExpressionStatement",
															"src": "1426:41:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 130,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "1482:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 131,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "1497:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 133,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 132,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "1504:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1497:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 134,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1509:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1497:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1482:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1482:37:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 139,
																			"name": "dests",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "1546:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 141,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 140,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "1552:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1546:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 142,
																				"name": "values",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "1556:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 144,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 143,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 89,
																				"src": "1563:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1556:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 145,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1568:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1556:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 138,
																	"name": "Airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1538:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1538:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 148,
															"nodeType": "EmitStatement",
															"src": "1533:46:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 92,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1130:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 93,
															"name": "dests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1134:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1134:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1130:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 150,
												"initializationExpression": {
													"assignments": [
														89
													],
													"declarations": [
														{
															"constant": false,
															"id": 89,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 150,
															"src": "1115:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 88,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1115:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 91,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1127:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1115:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1148:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 96,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1148:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 98,
													"nodeType": "ExpressionStatement",
													"src": "1148:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1110:480:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 155,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "1645:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenAirdrop_$192",
																					"typeString": "contract TokenAirdrop"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenAirdrop_$192",
																					"typeString": "contract TokenAirdrop"
																				}
																			],
																			"id": 154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1637:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1637:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 152,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "1621:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$886",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 831,
																	"src": "1621:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1621:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 158,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1655:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1621:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1680:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															},
															"value": "Insufficient token balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "1600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1600:118:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1600:118:0"
											}
										]
									},
									"documentation": null,
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 73,
											"modifierName": {
												"argumentTypes": null,
												"id": 72,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "979:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "979:9:0"
										}
									],
									"name": "airdrop",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "source",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "886:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"name": "dests",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "910:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 65,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "910:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 66,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "910:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"name": "values",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "942:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "942:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "876:95:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:0:0"
									},
									"scope": 192,
									"src": "860:865:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1791:171:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 176,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "1857:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenAirdrop_$192",
																					"typeString": "contract TokenAirdrop"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenAirdrop_$192",
																					"typeString": "contract TokenAirdrop"
																				}
																			],
																			"id": 175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1849:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1849:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 173,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "1833:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$886",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 831,
																	"src": "1833:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1833:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1822:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															},
															"value": "Insufficient token balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "1801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:114:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1801:114:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 186,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1940:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 187,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "1947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 183,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1925:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$886",
																"typeString": "contract IERC20"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 840,
														"src": "1925:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1925:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1925:30:0"
											}
										]
									},
									"documentation": null,
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 169,
											"modifierName": {
												"argumentTypes": null,
												"id": 168,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "1781:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1781:9:0"
										}
									],
									"name": "withdrawTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1755:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1754:17:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:0:0"
									},
									"scope": 192,
									"src": "1731:231:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 193,
							"src": "259:1705:0"
						}
					],
					"src": "32:1933:0"
				},
				"id": 0
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/examples/SimpleToken.sol#L20",
					"exportedSymbols": {
						"SimpleToken": [
							229
						]
					},
					"id": 230,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 194,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol",
							"file": "../token/ERC20/ERC20.sol",
							"id": 195,
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 760,
							"src": "25:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
							"file": "../token/ERC20/ERC20Detailed.sol",
							"id": 196,
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 818,
							"src": "60:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 197,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 759,
										"src": "358:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$759",
											"typeString": "contract ERC20"
										}
									},
									"id": 198,
									"nodeType": "InheritanceSpecifier",
									"src": "358:5:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 199,
										"name": "ERC20Detailed",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 817,
										"src": "365:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Detailed_$817",
											"typeString": "contract ERC20Detailed"
										}
									},
									"id": 200,
									"nodeType": "InheritanceSpecifier",
									"src": "365:13:1"
								}
							],
							"contractDependencies": [
								759,
								817,
								886
							],
							"contractKind": "contract",
							"documentation": "@title SimpleToken\n@dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`ERC20` functions.",
							"fullyImplemented": true,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								817,
								759,
								886
							],
							"name": "SimpleToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 203,
									"name": "DECIMALS",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "385:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 201,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "385:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "418:2:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 213,
									"name": "INITIAL_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "426:74:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "426:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130303030",
											"id": 205,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "467:5:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "476:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 208,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "490:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "482:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "482:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "476:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 211,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "475:25:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "467:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "661:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 222,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "677:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "677:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 224,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "689:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 221,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "671:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "671:33:1"
											}
										]
									},
									"documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
									"id": 228,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "53696d706c65546f6b656e",
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "629:13:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
														"typeString": "literal_string \"SimpleToken\""
													},
													"value": "SimpleToken"
												},
												{
													"argumentTypes": null,
													"hexValue": "53494d",
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "644:5:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f6fc0e115f393f52de8a1783205484e2c47c0ae0af6904170edd370a74c376e8",
														"typeString": "literal_string \"SIM\""
													},
													"value": "SIM"
												},
												{
													"argumentTypes": null,
													"id": 218,
													"name": "DECIMALS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "651:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 219,
											"modifierName": {
												"argumentTypes": null,
												"id": 215,
												"name": "ERC20Detailed",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 817,
												"src": "615:13:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$817_$",
													"typeString": "type(contract ERC20Detailed)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "615:45:1"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:0:1"
									},
									"scope": 229,
									"src": "593:118:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 230,
							"src": "334:379:1"
						}
					],
					"src": "0:714:1"
				},
				"id": 1
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							362
						]
					},
					"id": 363,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "901:109:2",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "911:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 242,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 243,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "927:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 247,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "946:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "951:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "938:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 253,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 241,
													"src": "1002:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 254,
												"nodeType": "Return",
												"src": "995:8:2"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "847:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "858:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 362,
									"src": "834:176:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "1341:112:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "1359:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "1364:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1359:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "1351:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "1351:49:2"
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "1410:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1410:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 274,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "1422:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 275,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "1426:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1410:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 278,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "1445:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 279,
												"nodeType": "Return",
												"src": "1438:8:2"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1287:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1298:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1332:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:2"
									},
									"scope": 362,
									"src": "1274:179:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "1760:391:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 290,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1991:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1996:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1991:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 296,
												"nodeType": "IfStatement",
												"src": "1987:45:2",
												"trueBody": {
													"id": 295,
													"nodeType": "Block",
													"src": "1999:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2020:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 289,
															"id": 294,
															"nodeType": "Return",
															"src": "2013:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "2042:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2042:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 299,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "2054:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "2058:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2042:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 304,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "2077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 305,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2081:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2077:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 307,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "2086:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2077:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2089:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2069:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 312,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 298,
													"src": "2143:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 289,
												"id": 313,
												"nodeType": "Return",
												"src": "2136:8:2"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1706:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1717:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1705:22:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1751:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1750:9:2"
									},
									"scope": 362,
									"src": "1693:458:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "2673:259:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "2757:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2761:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2757:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "2749:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "2749:44:2"
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "2803:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 333,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "2815:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 334,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2819:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2815:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2803:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 337,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "2924:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 323,
												"id": 338,
												"nodeType": "Return",
												"src": "2917:8:2"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2619:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2630:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2618:22:2"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2664:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2663:9:2"
									},
									"scope": 362,
									"src": "2606:326:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "3443:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "3461:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3466:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3461:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3469:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "3453:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3453:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 356,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "3513:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 357,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "3517:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3513:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 359,
												"nodeType": "Return",
												"src": "3506:12:2"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3389:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3400:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3388:22:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3434:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3433:9:2"
									},
									"scope": 362,
									"src": "3376:149:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "589:2938:2"
						}
					],
					"src": "0:3528:2"
				},
				"id": 2
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							759
						]
					},
					"id": 760,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 365,
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 887,
							"src": "25:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 366,
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 363,
							"src": "48:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 367,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 886,
										"src": "1250:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$886",
											"typeString": "contract IERC20"
										}
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1250:6:3"
								}
							],
							"contractDependencies": [
								886
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IERC20` interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using `_mint`.\nFor a generic mechanism see `ERC20Mintable`.\n * *For a detailed writeup see our guide [How to implement supply\nmechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See `IERC20.approve`.",
							"fullyImplemented": true,
							"id": 759,
							"linearizedBaseContracts": [
								759,
								886
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 371,
									"libraryName": {
										"contractScope": null,
										"id": 369,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 362,
										"src": "1269:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$362",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1263:27:3",
									"typeName": {
										"id": 370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1282:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 375,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1296:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 374,
										"keyType": {
											"id": 372,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1305:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1296:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 381,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1349:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 380,
										"keyType": {
											"id": 376,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1358:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1349:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 379,
											"keyType": {
												"id": 377,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1378:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1369:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 378,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1389:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 383,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1425:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1425:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "1567:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 388,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 383,
													"src": "1584:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 389,
												"nodeType": "Return",
												"src": "1577:19:3"
											}
										]
									},
									"documentation": "@dev See `IERC20.totalSupply`.",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:2:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1558:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1557:9:3"
									},
									"scope": 759,
									"src": "1514:89:3",
									"stateMutability": "view",
									"superFunction": 824,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "1727:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 398,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1744:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 400,
													"indexExpression": {
														"argumentTypes": null,
														"id": 399,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1754:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1744:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 397,
												"id": 401,
												"nodeType": "Return",
												"src": "1737:25:3"
											}
										]
									},
									"documentation": "@dev See `IERC20.balanceOf`.",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1680:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:17:3"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1718:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1717:9:3"
									},
									"scope": 759,
									"src": "1661:108:3",
									"stateMutability": "view",
									"superFunction": 831,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2047:78:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 413,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "2067:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2067:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 415,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2079:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 416,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "2090:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "2057:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2057:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2057:40:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2114:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 411,
												"id": 420,
												"nodeType": "Return",
												"src": "2107:11:3"
											}
										]
									},
									"documentation": "@dev See `IERC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1990:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2009:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1989:35:3"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2041:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2041:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2040:6:3"
									},
									"scope": 759,
									"src": "1972:153:3",
									"stateMutability": "nonpayable",
									"superFunction": 840,
									"visibility": "public"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2264:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "2281:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 433,
														"indexExpression": {
															"argumentTypes": null,
															"id": 432,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "2293:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2281:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 435,
													"indexExpression": {
														"argumentTypes": null,
														"id": 434,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2300:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2281:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 430,
												"id": 436,
												"nodeType": "Return",
												"src": "2274:34:3"
											}
										]
									},
									"documentation": "@dev See `IERC20.allowance`.",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2202:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2217:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2201:32:3"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2255:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2254:9:3"
									},
									"scope": 759,
									"src": "2183:132:3",
									"stateMutability": "view",
									"superFunction": 849,
									"visibility": "public"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2524:74:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 448,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "2543:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2543:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 450,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2555:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 451,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "2564:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2534:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2534:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "2534:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2587:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 446,
												"id": 455,
												"nodeType": "Return",
												"src": "2580:11:3"
											}
										]
									},
									"documentation": "@dev See `IERC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2470:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2469:32:3"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2518:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2518:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2517:6:3"
									},
									"scope": 759,
									"src": "2453:145:3",
									"stateMutability": "nonpayable",
									"superFunction": 858,
									"visibility": "public"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "3150:157:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 469,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3170:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 470,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3178:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3189:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "3160:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3160:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "3160:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3215:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "3223:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3223:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 485,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "3271:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 478,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "3235:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 480,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 479,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "3247:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3235:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 483,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 481,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "3255:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3255:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3235:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 281,
																"src": "3235:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3235:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "3206:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3206:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3206:73:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3296:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 467,
												"id": 490,
												"nodeType": "Return",
												"src": "3289:11:3"
											}
										]
									},
									"documentation": "@dev See `IERC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of `ERC20`;\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3077:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3093:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3112:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3076:51:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3144:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3144:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3143:6:3"
									},
									"scope": 759,
									"src": "3055:252:3",
									"stateMutability": "nonpayable",
									"superFunction": 869,
									"visibility": "public"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3788:117:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "3807:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3807:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 504,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3819:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 512,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "3865:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 505,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "3828:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 508,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 506,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "3840:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3840:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3828:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 510,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 509,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "3852:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3828:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 256,
																"src": "3828:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3828:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 501,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "3798:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3798:79:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "3798:79:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3894:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 517,
												"nodeType": "Return",
												"src": "3887:11:3"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3729:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3746:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3728:37:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3782:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3782:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3781:6:3"
									},
									"scope": 759,
									"src": "3702:203:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "4483:122:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "4502:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4502:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "4514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 539,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4560:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 532,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "4523:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 535,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 533,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "4535:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "4535:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4523:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 537,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 536,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "4547:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4523:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 281,
																"src": "4523:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4523:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "4493:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:84:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "4493:84:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4594:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 527,
												"id": 544,
												"nodeType": "Return",
												"src": "4587:11:3"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "4419:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "4436:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4418:42:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "4477:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4477:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4476:6:3"
									},
									"scope": 759,
									"src": "4392:213:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5158:343:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 556,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "5176:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5194:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5186:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5186:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5176:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5198:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "5168:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5168:70:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "5168:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 565,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "5256:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5277:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5269:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5269:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5256:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5281:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "5248:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5248:71:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "5248:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 573,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5330:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 575,
														"indexExpression": {
															"argumentTypes": null,
															"id": 574,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "5340:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5330:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 580,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "5372:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 576,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5350:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 578,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5360:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5350:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 281,
															"src": "5350:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5350:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5330:49:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "5330:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 584,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5389:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 586,
														"indexExpression": {
															"argumentTypes": null,
															"id": 585,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5399:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5389:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 591,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "5437:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 587,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5412:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 588,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "5422:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5412:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "5412:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5412:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5389:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "5389:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "5468:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 597,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5476:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 598,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5487:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "5459:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5459:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "EmitStatement",
												"src": "5454:40:3"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5098:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5114:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5133:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5097:51:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5158:0:3"
									},
									"scope": 759,
									"src": "5079:422:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5828:245:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 610,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "5846:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5865:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5857:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5857:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5846:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5869:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "5838:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5838:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "5838:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 618,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "5914:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 621,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "5946:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 619,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "5929:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "5929:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5929:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5914:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "5914:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 625,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5963:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"argumentTypes": null,
															"id": 626,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5973:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5963:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 632,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "6007:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 628,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5984:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 630,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 629,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "5994:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5984:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "5984:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5984:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5963:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5963:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6046:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6038:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6038:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 640,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "6050:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 641,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "6059:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "6029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6029:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "6024:42:3"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5786:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5786:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5803:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5803:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5785:33:3"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5828:0:3"
									},
									"scope": 759,
									"src": "5771:302:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "6448:244:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 653,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "6466:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6485:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6477:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6477:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6466:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6489:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "6458:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6458:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "6458:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 661,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "6536:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 664,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "6568:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 662,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "6551:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 281,
															"src": "6551:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6551:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6536:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "6536:38:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 668,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "6584:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 670,
														"indexExpression": {
															"argumentTypes": null,
															"id": 669,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "6594:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6584:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 675,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "6628:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 671,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "6605:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 673,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 672,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6615:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6605:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 281,
															"src": "6605:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6605:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6584:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "6584:50:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 680,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "6658:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6675:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6667:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6667:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6679:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 679,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "6649:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6649:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "EmitStatement",
												"src": "6644:41:3"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "6407:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "6424:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6406:32:3"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6448:0:3"
									},
									"scope": 759,
									"src": "6392:300:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "7191:255:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 698,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "7209:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7226:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7218:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7218:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7209:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7230:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "7201:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7201:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "7201:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 707,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "7287:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7306:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7298:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7298:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7287:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7310:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															924
														],
														"referencedDeclaration": 924,
														"src": "7279:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "7279:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 715,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7358:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 718,
															"indexExpression": {
																"argumentTypes": null,
																"id": 716,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "7370:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7358:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 719,
														"indexExpression": {
															"argumentTypes": null,
															"id": 717,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "7377:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7358:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 720,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "7388:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7358:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "7358:35:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 724,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "7417:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 725,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "7424:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 726,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7433:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "7408:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7408:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "EmitStatement",
												"src": "7403:36:3"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "7135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7135:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "7150:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7150:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "7167:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7134:47:3"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7191:0:3"
									},
									"scope": 759,
									"src": "7117:329:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "7684:124:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "7700:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7709:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7694:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7694:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "7694:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 743,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "7735:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 744,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "7744:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7744:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 753,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "7793:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 746,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "7756:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 748,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 747,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 732,
																			"src": "7768:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7756:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 751,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 749,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "7777:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7777:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7756:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 281,
																"src": "7756:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 742,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "7726:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7726:75:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "7726:75:3"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "7642:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7642:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "7659:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7659:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7641:33:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7684:0:3"
									},
									"scope": 759,
									"src": "7623:185:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 760,
							"src": "1232:6578:3"
						}
					],
					"src": "0:7811:3"
				},
				"id": 3
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							817
						]
					},
					"id": 818,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 761,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 762,
							"nodeType": "ImportDirective",
							"scope": 818,
							"sourceUnit": 887,
							"src": "25:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 763,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 886,
										"src": "135:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$886",
											"typeString": "contract IERC20"
										}
									},
									"id": 764,
									"nodeType": "InheritanceSpecifier",
									"src": "135:6:4"
								}
							],
							"contractDependencies": [
								886
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 817,
							"linearizedBaseContracts": [
								817,
								886
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 766,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 817,
									"src": "148:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 765,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "148:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 768,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 817,
									"src": "174:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 767,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "174:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 770,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 817,
									"src": "202:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 769,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "202:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "494:85:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 779,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "504:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 780,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "512:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "504:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "504:12:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 783,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "526:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 784,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "536:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "526:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "526:16:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 787,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "552:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 788,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "564:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "552:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "552:20:4"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 792,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "429:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "449:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "471:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 775,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "471:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:58:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:4"
									},
									"scope": 817,
									"src": "416:163:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "696:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 797,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 796,
												"id": 798,
												"nodeType": "Return",
												"src": "706:12:4"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:2:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "681:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "681:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:15:4"
									},
									"scope": 817,
									"src": "644:81:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "892:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 805,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 768,
													"src": "909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "902:14:4"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:4"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "877:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "877:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "876:15:4"
									},
									"scope": 817,
									"src": "838:85:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "1526:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 813,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 770,
													"src": "1543:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 812,
												"id": 814,
												"nodeType": "Return",
												"src": "1536:16:4"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:2:4"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1519:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 810,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1519:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1518:7:4"
									},
									"scope": 817,
									"src": "1478:81:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 818,
							"src": "109:1452:4"
						}
					],
					"src": "0:1562:4"
				},
				"id": 4
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.3.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							886
						]
					},
					"id": 887,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 819,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:5"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:5"
									},
									"scope": 886,
									"src": "270:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "427:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "467:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:5"
									},
									"scope": 886,
									"src": "408:68:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "714:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "733:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:5"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "767:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:5"
									},
									"scope": 886,
									"src": "696:77:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through `transferFrom`. This is\nzero by default.\n     * This value changes when `approve` or `transferFrom` are called.",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1067:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1082:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1122:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:5"
									},
									"scope": 886,
									"src": "1048:83:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * > Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an `Approval` event.",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1792:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1809:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1791:33:5"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1843:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:6:5"
									},
									"scope": 886,
									"src": "1775:74:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2178:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2194:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2213:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2177:51:5"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2247:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2247:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2246:6:5"
									},
									"scope": 886,
									"src": "2156:97:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 877,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2437:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2459:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2479:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2436:57:5"
									},
									"src": "2422:72:5"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to `approve`. `value` is the new allowance.",
									"id": 885,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2668:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2691:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2716:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2667:63:5"
									},
									"src": "2653:78:5"
								}
							],
							"scope": 887,
							"src": "176:2557:5"
						}
					],
					"src": "0:2734:5"
				},
				"id": 5
			},
			"github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "github.com/athiwatp/openzeppelin-solidity/blob/master/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							905
						]
					},
					"id": 906,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "Utility library of inline functions on addresses",
							"fullyImplemented": true,
							"id": 905,
							"linearizedBaseContracts": [
								905
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "529:550:6",
										"statements": [
											{
												"assignments": [
													896
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "539:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 895,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "539:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "539:12:6"
											},
											{
												"externalReferences": [
													{
														"account": {
															"declaration": 890,
															"isOffset": false,
															"isSlot": false,
															"src": "1038:7:6",
															"valueSize": 1
														}
													},
													{
														"size": {
															"declaration": 896,
															"isOffset": false,
															"isSlot": false,
															"src": "1018:4:6",
															"valueSize": 1
														}
													}
												],
												"id": 898,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "1007:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 899,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "1064:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1071:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1064:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 894,
												"id": 902,
												"nodeType": "Return",
												"src": "1057:15:6"
											}
										]
									},
									"documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "483:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "482:17:6"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "523:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 892,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "523:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "522:6:6"
									},
									"scope": 905,
									"src": "463:616:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 906,
							"src": "85:996:6"
						}
					],
					"src": "0:1082:6"
				},
				"id": 6
			}
		}
	}
}